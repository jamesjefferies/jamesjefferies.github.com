<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[James Jefferies and ShedCode Ltd]]></title>
  <link href="http://jamesjefferies.com/atom.xml" rel="self"/>
  <link href="http://jamesjefferies.com/"/>
  <updated>2012-11-27T17:04:41+00:00</updated>
  <id>http://jamesjefferies.com/</id>
  <author>
    <name><![CDATA[James Jefferies]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Steam powered Arduino part 1]]></title>
    <link href="http://jamesjefferies.com/2012/11/11/steam-powered-arduino-part-1/"/>
    <updated>2012-11-11T16:22:00+00:00</updated>
    <id>http://jamesjefferies.com/2012/11/11/steam-powered-arduino-part-1</id>
    <content type="html"><![CDATA[<p>Following on from getting <a href="http://jamesjefferies.com/2012/08/30/the-story-of-cathy-and-heathcliff">Cathy &amp; Heathcliff</a>, our internet enabled thermal printers up and running as part of the <a href="http://happenstanceproject.com">Happenstance Project</a>, I wanted to see if I could get them running on steam power.</p>

<h2>Steam power</h2>

<p>Of course most electricity we get from the national grid has been generated by a steam turbine in a power station. I though, was thinking more of this kind of steam engine!</p>

<p><img src="http://jamesjefferies.com/images/mamod-in-the-kitchen.jpg" alt="mamod in the kitchen" /></p>

<p>This is stationary steam engine, hand built in the West Midlands by a company called <a href="http://mamod.co.uk">Mamod</a> founded in 1937.</p>

<h2>Mamod 1335D SP5</h2>

<p>This specific model comes with a dynamo, dual cylinders and a generator, a 1335D. I wanted to see how much power it would output with the standard dynamo. The bulb was a 1.5V bulb, so I wasn&#8217;t expecting it to power an Arduino out of the box. I realise as well that the output would require stabilising and regulating. Cathy &amp; Heathcliff&#8217;s Arduino&#8217;s require 7-16V.</p>

<p><img src="http://jamesjefferies.com/images/testing-the-voltage.jpg" alt="testing the voltage" /></p>

<p>And I was right! I lit the boiler using three of the solid fuel pellets and waited for pressure to build in the boiler.</p>

<h2>Pressure builds</h2>

<p>Once the pressure did start to build, it soon became obvious that there were a few leaks which meant that some pressure was going to be lost. I kept on attempting to start the engine, but it was a while before it was ready, around 10 pounds per square inch of pressure.</p>

<p>After starting, the generator produced a rather paltry, 0.7V, hardly enough to light the light!</p>

<h2>Best results</h2>

<p>I managed then to stop the engine and hold it, to let the pressure build. Once it reached about 15 psi, I started the engine again and tested the voltage. This time it made it up to 1.5V</p>

<p>After that run, the pressure dropped and the fuel began to run out, so that was that.</p>

<h2>Next Time</h2>

<p>The plan for next time will be to not even start the engine until the pressure reaches 15 psi. I might also try and extra fuel pellet to see if that helps maintain the pressure.</p>

<p>I&#8217;ve ordered some <a href="http://sugru.co.uk">sugru</a> to try and fix the leak too! Will be interesting to see if it works.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A great idea for Amazon deliveries]]></title>
    <link href="http://jamesjefferies.com/2012/10/28/a-great-idea-for-amazon-deliveries/"/>
    <updated>2012-10-28T15:14:00+00:00</updated>
    <id>http://jamesjefferies.com/2012/10/28/a-great-idea-for-amazon-deliveries</id>
    <content type="html"><![CDATA[<h2>Amazon Pickup Lockers</h2>

<p>This year, Amazon launched it&#8217;s Pick up lockers and Collection locations. A great idea for a mail order company, providing delivery alternatives for customers so they don&#8217;t have to put up with the, <a href="http://www.guardian.co.uk/money/2012/aug/24/amazon-complaints-yodel-delivery-service">generally awful</a>, parcel delivery services. Having had parcels left outside houses and in rubbish bins, it&#8217;s good to know you can collect, at your convenience from a location you have chosen.</p>

<h2>The Oxford - Cambridge Railway</h2>

<p>Then, the other weekend, I was on a railway line I&#8217;d never been on before, the Bletchley to Bedford line, which joins the West Coast Main Line, to the Midland Main Line, serving lots of small stations on route. A lot of work has been done on the infrastructure recently, as <a href="http://www.railfuture.org.uk/ox-cam/">services get extended</a> from Bletchley towards Oxford, and hopefully one day, back towards Cambridge. The line will also be electrified as part of the <a href="http://jamesjefferies.com/2012/07/16/the-electrified-spine-and-the-rest-of-the-news/">&#8216;electric spine&#8217;</a>.</p>

<h2>How about&#8230;</h2>

<p>About half way along this route, is a massive Amazon warehouse. Although it is next to the railway line, it isn&#8217;t rail served, there are no sidings set up for transferring goods. It got me thinking though, if local and major railway stations had Amazon pick up lockers, then they could be rail served in a really efficient way. Of course there would be infrastructure costs, getting Amazon warehouses linked up, but once that was done, a really efficient way of delivering goods.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Scenic Railways - our railway hack]]></title>
    <link href="http://jamesjefferies.com/2012/10/16/scenic-railways-our-railway-hack/"/>
    <updated>2012-10-16T16:22:00+01:00</updated>
    <id>http://jamesjefferies.com/2012/10/16/scenic-railways-our-railway-hack</id>
    <content type="html"><![CDATA[<p><img src="http://jamesjefferies.com/images/scenic-railways.png" alt="screen shot of application" /></p>

<p>Thanks to the <a href="http://jamesjefferies.com/2012/10/16/railway-hackday-off-the-rails/">Off The Rails</a> hackday, I was able to team up with some fellow software engineers to build something in a day. Our team consisted of <a href="http://twitter.com/frankieroberto">Frankie Roberto</a>, <a href="http://twitter.com/jnicho02">Jez Nicholson</a>, and <a href="http://twitter.com/joooe">Joe Hughes</a>. Frankie had had the idea for building an application which would show sights of interest visible from the train route, indicating rough placements and which side of the train to look on. I knew Frankie from Sheffield, Frankie had worked with Jez before on a previous hackday and Joe was interested in what we were doing, our team was formed!</p>

<p>Interestingly, during the &#8216;speed dating&#8217; section at the beginning of the day, when we chatted to other people about their ideas and what they were thinking of building, one chap, whose name I think was Phil, was thinking about Railway iSpy, which sounds pretty similar to what we actually built (without Big Chief i-Spy though!). Our application also bears an uncanny similiarity to the Peppa Pig episode <a href="http://www.youtube.com/watch?v=Htl6NYcBE-k">The Train Ride!</a></p>

<p>After some discussion on ideas, scope, implementation and the <a href="http://www.railperf.org.uk/">Railway Performance Society</a> we started building a Rails web application and an iOS app. Although I know a lot about railways, I&#8217;m still in the early days of learning Rails and iOS, so the patience of Jez and Frankie whilst building <a href="http://www.scenicrailways.org.uk">Scenic Railways</a> was much appreciated. So whilst the three of us built the web application, Joe got cracking with building an iOS application.</p>

<p><img src="http://jamesjefferies.com/images/scenic-railways-on-iphone.png" alt="ios-1" /></p>

<p>We got an initial version built in the time we had (from about 11am until 7pm) before the presentations were due to start. I worked on a bit of map integration using <a href="http://leaflet.cloudmade.com">leaflet.js</a> whilst Jez and Frankie implemented the main structure.</p>

<p>Although the version we finished was relatively basic, there are some nice features, the best one being that the sides to look out of the window on, reverse depending on direction of travel!  It could easily be extended in the future to add extra routes and extra points of interest (POIs). Joe had some ideas on making the iOS app competitive, by providing incentives for people to take photos of the points from the train!</p>

<p><img src="http://jamesjefferies.com/images/scenic-railways-1.png" alt="screen shot of application" /></p>

<p>So, feel free to have a look at the site <a href="http://www.scenicrailways.org.uk">Scenic Railways</a> and you can even checkout the code from <a href="https://github.com/frankieroberto/scenic-railways">github</a> and laugh at my Rails code (or lack of it!).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Railway Hackday - Off The Rails]]></title>
    <link href="http://jamesjefferies.com/2012/10/16/railway-hackday-off-the-rails/"/>
    <updated>2012-10-16T15:12:00+01:00</updated>
    <id>http://jamesjefferies.com/2012/10/16/railway-hackday-off-the-rails</id>
    <content type="html"><![CDATA[<p><img src="http://jamesjefferies.com/images/off_the_rails_sponsors1.png" title="Off The Rails" alt="off the rails image" /></p>

<p>After being Technologist in Residence at <a href="http://sitegallery.org">Site Gallery</a> earlier in the year, as part of the <a href="http://happenstanceproject.com">Happenstance Project</a> I started to think of some ideas I wanted to follow for later in 2012.</p>

<h2>Hackday</h2>

<p>One of those ideas was to run a <a href="http://rewiredstate.org/hack-days">Hackday</a>, but not any old Hackday, one centred around Railways. Network Rail had just opened up their realtime <a href="http://datafeeds.networkrail.co.uk">Datafeeds</a> and as far as I knew, no one else had ever run one. Sure, there had been Transport Hackdays, but not Railway specific ones.</p>

<h2>First steps</h2>

<p>So I got to work, I went to experience a 24 hour hackday for myself, where I discovered that sometimes technical issues with the building can really slow people&#8217;s progress and that working overnight doesn&#8217;t really suit me anymore!</p>

<h2>Clickerty Hack</h2>

<p>I also bought a domain and registered a Twitter account. The hackday would be called Clickerty Hack. Then, having a good read of <a href="http://hackdaymanifesto.com/">The Hackday Manifesto</a> made me realise that a lot of work was required to get a decent Hackday up and running.</p>

<h2>Loco 2 and Off The Rails</h2>

<p>It was then that I found out about somebody else&#8217;s plans for a Railway Hackday, <a href="http://loco2.com">loco2</a> was a company I was already watching with interest. A startup based around European Train travel, ticketing and guides.</p>

<p>Their hackday, Off the Rails, was in a more advanced state than Clickerty Hack, so putting it on hold, I volunteered to help.</p>

<h2>ShedCode Sponsorship</h2>

<p>It was a real privilege to be able to help with a small part of the organising and for my company <a href="http://shedcode.co.uk">ShedCode</a> to be one of the sponsors, providing some of the food for the masses!</p>

<h2>Meeting the experts</h2>

<p>During 2012, I&#8217;d found a number of people who had built some incredible pieces of software using Railway data, especially <a href="http://twitter.com/poggs">Peter Hicks</a> and <a href="http://twitter.com/swlines">Tom Cairns</a> who built, amongst other things <a href="http://www.opentraintimes.com/">Open Train Times</a> and <a href="http://traintimes.im">Train Times</a> respectively. So it was brilliant to meet them in person at Off The Rails. There were also many other people knowledgeable about Railways, Open Data and Mapping - I could have spent all day just talking to people!</p>

<h2>The teams</h2>

<p>During the day, the teams built some inspiring things, including an application which builds spotify playlists to match the length of your train journey and many others. Most of them will hopefully be available at some point on github for perusal.</p>

<h2>Thanks</h2>

<p>All in all, a fantastic day, thanks to <a href="http://loco2.com">Loco2</a> and <a href="http://bethnalgreenventures.com">Bethnal Green Ventures</a> and here&#8217;s to the next Railway Hackday, whether it&#8217;s Off The Rails 2, or Clickerty Hack! With cake too of course ;)</p>

<p><img src="http://jamesjefferies.com/images/cake.jpg" title="Cake" alt="off the rails cake" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tech companies - accelerate your employees]]></title>
    <link href="http://jamesjefferies.com/2012/09/30/tech-companies-accelerate-your-employees/"/>
    <updated>2012-09-30T10:29:00+01:00</updated>
    <id>http://jamesjefferies.com/2012/09/30/tech-companies-accelerate-your-employees</id>
    <content type="html"><![CDATA[<h2>Corporate Social Responsibility</h2>

<p>Corporate Social Responsibility is a huge field in modern times. Businesses vary in their response to the challenge of responsibility, from box ticking a checklist, to doubling up charitable donations, to actively encouraging employees to be involved in Charitable works.</p>

<p>My old company, <a href="http://www.technophobia.com">Technophobia</a> ran a FedEx day, where one of the challenges was for a team to rebuild a website for a charity, which they did. You can <a href="http://www.technophobia.com/blog/read/another-successful-innovation-day-407">read all about</a> it, good for them!</p>

<p>This year though, I&#8217;ve been thinking more about how companies could donate their employees and employee time to make a difference in more unusual ways.</p>

<h2>Technologist in Residence</h2>

<p>Having had the privilege of being a Technologist in Residence at the <a href="http://sitegallery.org">Site Gallery</a> earlier this year, I was able to see first hand what a difference a problem solving techie can make in a relatively small art&#8217;s organisation. With a Research and Development remit, as well as helping with some of the day-to-day tasks, a techie can enjoy the excitment of trying new things, whilst also being able to fix problems without the usual gubbins of working for a large corporation.</p>

<p>Of course, many arts organisations have a resident techie, but usually they have to spin many plates, from producing exhibitions, to maintaining the website, leaving little room for them to catch up with some of the more strategic things which need doing.</p>

<p>There is limited funding to run <a href="http://www.happenstanceproject.com">Happenstance</a> style residencies, and this is where local businesses could make a difference. By adopting a local arts organisation, getting involved, running events and allowing staff to spend a week once a year, then a day a month for the rest of the time, for example, the benefits would be felt by all.</p>

<h2>Who gains?</h2>

<ul>
<li>The arts organisation - they gain some help in fixing some things, as well as being inspired with new and interesting technology. Building relationships with the local tech community</li>
<li>The techies - they can hopefully have time to do experiments, R&amp;D, as well as doing some of the stuff which needs doing. From tidying networks, configuring firewalls, mending printers, redesigning websites, helping with copy… you get the picture!</li>
<li>The company - they help the local community, building relationships with organisations around and about, increasing their reach and network. Their employees are more inspired and excited about new things.</li>
</ul>


<h2>Who pays in these difficult times</h2>

<p>It would be completely understandable for tech companies to claim that they cannot afford to let their billable employees take time out of their billing cycle to do &#8216;good&#8217;. Understandable, but short sighted. It&#8217;s the same argument about sending employees on courses, or to conferences - &#8220;where is the business benefit?&#8221;.</p>

<p>Well, I believe that good, motivated employees are expensive to recruit and maintain, why risk them getting demotivated, bored and unhappy, when by giving them time to innovate and collaborate, they grow! So the risk is far greater, that you lose good people by not giving them the room to grow. Best to pay out of a sense of innovation and employee investment, than to pay the price for losing them, either by them leaving or by turning them in to faceless, billable resources.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Happenstance Newspaper]]></title>
    <link href="http://jamesjefferies.com/2012/09/26/happenstance-newspaper/"/>
    <updated>2012-09-26T20:50:00+01:00</updated>
    <id>http://jamesjefferies.com/2012/09/26/happenstance-newspaper</id>
    <content type="html"><![CDATA[<p>Following on from the amazing <a href="http://happenstanceproject.com">Happenstance Project</a> I worked on earlier in the year, we had the final Showcase at Nesta HQ. For the Showcase, <a href="http://finalbullet.com">Leila</a> produced a Happenstance Newspaper, designed by <a href="http://alexparrott.co.uk">Alex Parrott</a> including articles by yours truly! You can download a <a href="http://jamesjefferies.com/Happenstance_2012_Newspaper.pdf">PDF copy of it</a>.</p>

<p>Enjoy!</p>

<p><img src="http://jamesjefferies.com/happenstance_newspaper.jpg" title="Happenstance Newspaper" alt="Newspaper" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Creativity Tap]]></title>
    <link href="http://jamesjefferies.com/2012/09/25/the-creativity-tap/"/>
    <updated>2012-09-25T22:15:00+01:00</updated>
    <id>http://jamesjefferies.com/2012/09/25/the-creativity-tap</id>
    <content type="html"><![CDATA[<h2>The Creativity Tap</h2>

<p>Creativity is just like a tap right? You need to do some thing a bit woo and a bit wah, so you switch on the creativity tap and all these incredible ideas just pour out of your brain. There are two dangers though if you use the creativity tap.</p>

<p>One is that if you leave that tap switched off for a while, then all the creativity gets stored up in your brain, without an outlet until&#8230; Pop! One day it’s gone, those ideas had to go somewhere, so they leaked out, usually somewhere behind your ear, hopefully picked up by someone else. You have writers block, coders deadlock, songwriters&#8230; err, song block. Oh dear</p>

<p>The other danger is that you leave that tap switched on all the time until your brain empties. This too is a bad idea, sure, you’ve made some room in your noddle for new things, but you need a few left in there, to keep the ideas factory ticking over. Oh double dear&#8230;</p>

<h2>Writing Songs</h2>

<p>Knowing people who are songwriters, I get the privilege of seeing songs appear, until they end up being recorded and performed, or they mutate into a different song, or they end up on the shelf, maybe for another day. I’m sure not every songwriter works like this, but those I know have to <em>work</em> at honing a song. They rarely appear fully formed but they often appear when there is space in their lives to switch on the creativity tap for a bit to see what happens.</p>

<p>If they don’t have the chance to get the songs <em>out</em>, into the open, then you can see how those song ideas start to play merry hell. The frustration builds, no time for the songs, too busy having to do other stuff. It’s almost a physical pain, the song <em>has</em> to be brought to life. There is a creative imperative which must be fulfilled.</p>

<h2>Writing Code</h2>

<p>Fortunately, for us software engineers, coders, developers, tapping at our keyboards day by day, telling the computer what to do and when to do it, we don’t need the creativity tap. We get stuck? We ask a search engine. We need to do something from scratch? Well, <em>someone</em> will have done something like it, we just need to find it and copy them. We need another pair of eyes? Well, ask a colleague. It’s all there for us, if we use a clever framework or development environment, it’ll probably autocomplete what we’re thinking too. We are coding machines..</p>

<p>Or are we? Having spent many years writing code, I started to realise that when I was mechanistic in what I was doing, I became frustrated that I wasn’t able to come up with new ideas or ways of doing things. I was constrained by getting this piece of work finished in as short a period of time that was possible. No time to switch on the creativity tap, just <em>get it done</em>.</p>

<p>The big problem is when you work for someone else, you can find yourself under a lot of pressure to crank the sausage machine handle rather than think things through. I worked with an engineer once, who would deliberately stop what he was doing and just <em>think</em>. Rather than thrashing through a jungle of code&#8230; stop first and think. It worked too, giving a bit of time to turn on the creativity tap to see what happened.</p>

<p>I struggled in my day to day job, so I tried to make time in the evenings and the weekends. But you’re so tired then that switching on the creativity tap just floods you with ideas which you don’t have the energy to either make note of or do anything with. Like the frustrated songwriter I would feel the pain of not learning new skills, not playing with languages and technology. Not actually chuffing making anything which made you say, even if it is just to yourself “I made that and I’m pleased with what I’ve done”.</p>

<p>So, what can be done?</p>

<p>Well one answer, in the workplace, where people have a pressurised, day to day job and a boss, is for the bosses to give people time when they have the headspace to play. With their work, with something new, with wooden blocks, with a great idea they’ve had. Not only do they get chance to switch on the creativity tap, but usually it knocks on in to their ‘day to day’ work too. Wins all around.</p>

<p>If you are your own boss, then plan in time where you put down the work you’re doing for clients or your startup and have a play. You never know what amazing ideas might come to life!</p>

<p>Disclaimer - the creativity tap premise is a load of nonsense, if only it was a tap we could switch on and off!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Troubleshooting WordPress connectivity issue - could not connect to host]]></title>
    <link href="http://jamesjefferies.com/2012/09/05/troubleshooting-wordpress-connectivity-issue/"/>
    <updated>2012-09-05T14:57:00+01:00</updated>
    <id>http://jamesjefferies.com/2012/09/05/troubleshooting-wordpress-connectivity-issue</id>
    <content type="html"><![CDATA[<h2>The problem</h2>

<p>After migrating a WordPress site, auto update and plugin install wouldn&#8217;t work. The former errored with <code>could not connect to host</code> which seemed very odd.</p>

<h3>First attempts</h3>

<p>WordPress allows you to download the file manually or autoupdate if configured correctly. Clicking on the manual download link and the file downloaded fine to the local machine. So first, I thought I&#8217;d try and download the file from the command line on the new server.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>wget http://wordpress.org/wordpress-3.4.1.zip</span></code></pre></td></tr></table></div></figure>


<p>Zip, it all downloaded fine.</p>

<h3>Extra help</h3>

<p>There is a good trouble shooting/dev plugin for WordPress called <a href="http://wordpress.org/extend/plugins/core-control/">Core Control</a>. By installing this and enabling the HTTP control, you can test the various transports WordPress uses for downloads. Curl, PHP File open, PHP Fsockopen etc.</p>

<p>Testing all three default transports, starting with cURL came up with the same message, <code>could not connect to host</code></p>

<h3>Head Scratching time</h3>

<p>So WordPress was telling the truth. Now, as WordPress was running as the <code>www-data</code> user, what happens if I tried the wget from the command line for that user?</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>wget http://wordpress.org/wordpress-3.4.1.zip
</span><span class='line'>Permission denied!</span></code></pre></td></tr></table></div></figure>


<p>Ah-ha, so it was nothing to do with WordPress, the <code>www-data</code> user couldn&#8217;t download anything.</p>

<h3>Problem solved!</h3>

<p>Firewalls, I started thinking firewalls and lo and behold, <a href="https://projects.bytemark.co.uk/projects/24/wiki/Firewall">BytemarkUK block outgoing http traffic</a> for the www-data user by default! This makes sense for when sites get compromised, but it also stops some of the core functionality for updates etc working.</p>

<p>Enabling http traffic for the www-data user will make things worse if the site is compromised, but also makes it a lot easier to keep the site up to date, reducing the chances of a WordPress exploit.</p>

<p>The following removes the firewall rule</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rm /etc/symbiosis/firewall/outgoing.d/50-www-data</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Poor old java]]></title>
    <link href="http://jamesjefferies.com/2012/09/04/poor-old-java/"/>
    <updated>2012-09-04T12:11:00+01:00</updated>
    <id>http://jamesjefferies.com/2012/09/04/poor-old-java</id>
    <content type="html"><![CDATA[<p>There seems to be a lot of noise at the moment about the latest security vulnerabilities in Java, especially Java 7. I&#8217;d go as far as to say that some of the articles are <a href="http://www.pcadvisor.co.uk/news/security/3379150/time-give-java-boot/">scare stories</a>. Is this what we need, to give Java the boot?</p>

<h2>TL;DR</h2>

<p>All computers connected to things have security vulnerabilities of various forms.</p>

<p>Desktop Java installed computers where not required is an unnecessary security risk and should be uninstalled, just as Adobe Flash, Adobe Reader, Silverlight etc. Windows 8 and Mac OS X don&#8217;t bundle Java runtimes via default anymore. This is a good thing. Oracle should be far quicker out of the blocks fixing security vulnerabilitles.</p>

<p>Giving Java the boot full stop is an over the top reaction. However, giving Java the boot on the desktop when it&#8217;s not required is a wise move.</p>

<h2>History</h2>

<p>Java as a platform has a reputation for being secure, reliable and frequently patched. Being able to run Java server side on Sun software provided the building blocks for many web businesses at the end of the last millenium and in to this one.</p>

<p>It also has many branches in to other parts of the internet ecosystem. As well as running server side, the other two main areas are mobile Java, J2ME, for example and desktop Java, either via browser plugin Applets or as runnable GUI applications using a desktop JVM (virtual machine).</p>

<p>Over the last few years, mobile Java has basically been nobbled by the rise of smartphones and their respective application frameworks and stacks, Android, iOS, Windows whatever it&#8217;s called, BlackBerry and the rest.</p>

<p>However, the legacy of desktop Java has continued by some applications still requiring a JVM installed on the local PC and some people still writing or using Java applets. Althoguh Sun and now Oracle have continued to try and encourage desktop development with their JavaFX initative, they&#8217;ve not got very far.</p>

<h3>Applets</h3>

<p>The idea behind applets was that you visited a site via a web browser, which could always deliver the latest version of the application code to your browser, either to run in a plug-in or using the JVM installed on your machine. They were useful for some niche applications, you sometimes see them now replacing flash file uploaders for example, but the User Experience was often a bit shonky.</p>

<h3>Desktop Applications</h3>

<p>Write Once, run anywhere was the mantra behind Java Desktop applications, an attractive proposition. One set of code would run on Windows, Linux, Unix variants &amp; Macs. Many Java development environments have been written in Java and are used today. CrashPlan is an example cross platform application which requires desktop Java to work.</p>

<h2>Legacy</h2>

<p>Unfortunately, a lot of the Java runtimes (and Flash installs, adobe reader installs etc), installed in days of yore on people&#8217;s machines will have security vulnerabilities, either because they are out of date or because of recent new exploits.</p>

<p>It was interesting to see Apple&#8217;s response to recent JVM exploits, although they may have been slow in responding, they, in effect, switched off people&#8217;s Java installations, providing a prompt if it was required. In one OS X update (assuming it was installed!) Macs became better protected from Java exploits.</p>

<h2>Summary</h2>

<p>If you don&#8217;t use Java on your machine - uninstall it, it&#8217;s not worth having a potential vulnerability. Same with Flash or Adobe reader - if you don&#8217;t use them, uninstall them.</p>

<p>If you do need it installed on your machine, there is some great advice <a href="http://www.macworld.co.uk/macsoftware/news/?newsid=3378690&amp;pagtype=allchandate">here</a></p>

<p>Of course, keep things up to date that you do use, Operating systems, browsers etc</p>

<p>Java server side is a different story. If you do use the Java Virtual Machine, whether it is for Java apps, Clojure, Scala or whatever. Keep your eyes on the Oracle security bulletins, update when you can and be aware of any vulnerabilities in the latest version.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Story of Cathy and Heathcliff]]></title>
    <link href="http://jamesjefferies.com/2012/08/30/the-story-of-cathy-and-heathcliff/"/>
    <updated>2012-08-30T16:29:00+01:00</updated>
    <id>http://jamesjefferies.com/2012/08/30/the-story-of-cathy-and-heathcliff</id>
    <content type="html"><![CDATA[<p>Back, back, back in the day&#8230; well, January 1978, Kate Bush released the classic song Wuthering Heights, inspired by the Emily Bronte novel. As well as launching her career, and boosting the sales of flowy white dresses, the song provided inspiration for us when it came to one of our projects.</p>

<h2>Go Free Range</h2>

<p>James Adam of <a href="http://gofreerange.com">GoFreeRange</a> has done a lot of work on transforming simple thermal receipt printers in to intelligent, ethernet enabled printing devices. He’s done an incredible job of writing software and working out the electronics, based on the Arduino device, to get them up and running.</p>

<p><img src="http://jamesjefferies.com/images/nyancat.png" alt="nyancat" /></p>

<h2>Cathy &amp; Heathcliff</h2>

<p>When our two printers arrived to play their part in the Happenstance project, their default names were a bit of a mouthful, they made a good password, but not a name which slipped off the tongue - 4j8k6i5x5q7a7b5y.</p>

<h2>Up and running</h2>

<p>So, when we finally got the printers up and running, after a few head scratching hours, the first message we sent to 4j8k6i5x5q7a7b5y was, ‘It&#8217;s me, Cathy, I&#8217;ve come home’ – a line from Cathy to Heathcliff in the song. So Cathy named herself, and 4j8k6i5x5q7a7b5y became Heathcliff.</p>

<p><img src="http://jamesjefferies.com/images/output.png" alt="output" /></p>

<p>That was in the final week of the Bill Drummond exhibition, “Ragworts” at Site Gallery and we gave the two printers a part to play in the project. Some local Sixth Form students were tasked with sending messages to Cathy &amp; Heathcliff as they jumped on the nearest bus they could find, and journeyed into the wilds of outer Sheffield.</p>

<p>At first we thought they could tweet their progress and the printers would pick up on those tweets and print them, but we decided to mash up a lot of technology to provide a simpler solution for the students. With the clock ticking, we glued together Twilio, Gmail, ifttt (‘If This Then That’) and some custom code we wrote. Cathy &amp; Heathcliff now had their own Sheffield phone numbers, and now you could send them a text message and the contents would be printed and tweeted.</p>

<p>When the students set off on their journeys, they could send SMS text messages to Cathy and Heathcliff’s numbers and the magic of technology would take care of the rest. Their messages would appear on the printers, back at Site Gallery and on their Twitter account. It was fascinating to read the messages sent back to base by the students, many of which were very poetic and evocative.</p>

<p>After all this excitement, our plan was to get Cathy and Heathcliff mobile so they could roam the streets of Sheffield whilst remaining available for printing. With the aid of dongle, a mac and a giffgaff sim card they were freed from the shackles of mains power and wifi, ready to explore!</p>

<p><img src="http://jamesjefferies.com/images/getonabus.png" alt="get on a bus" /></p>

<h2>What&#8217;s next</h2>

<p>Although Happenstance has now finished, the printers have been used in Site for other purposes. Cathy has been on reception acting as a comments book (text her and she’ll print your comment) whilst Heathcliff has been reading twitter and printing mentions of Site Gallery!</p>

<p>We still hope to use them for one final experiment where we get them to run off steam power!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting up WordPress]]></title>
    <link href="http://jamesjefferies.com/2012/08/22/setting-up-wordpress/"/>
    <updated>2012-08-22T15:07:00+01:00</updated>
    <id>http://jamesjefferies.com/2012/08/22/setting-up-wordpress</id>
    <content type="html"><![CDATA[<p>So, your server is set up and raring to go. Please see my <a href="http://jamesjefferies.com/2012/08/22/setting-up-a-fresh-debian-server/">earlier blogpost</a> on getting the server to this point.. next!</p>

<h2>Install Apache2</h2>

<p>Let&#8217;s get our web server up and running by installing apache</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>apt-get install apache2</span></code></pre></td></tr></table></div></figure>


<p>and check it is up and running with <code>http://123.456.789.012</code> in your friendly web browser.</p>

<h2>Configure Apache2 for low memory usage</h2>

<p>With previous virtual servers, I&#8217;ve found that Apache needs a bit of tweaking to support WordPress load. I found this useful <a href="http://imperialwicket.com/tuning-apache-for-a-low-memory-server-like-aws-micro-ec2-instances">post</a> about tweaking apache. The nuts and bolts are to amend some of the settings in your <code>/etc/apache2/apache.conf</code> as follows:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Timeout 30
</span><span class='line'>KeepAlive On
</span><span class='line'>MaxKeepAliveRequests 50
</span><span class='line'>KeepAliveTimeout 10
</span><span class='line'>
</span><span class='line'>&lt;IfModule mpm_prefork_module&gt;
</span><span class='line'>    StartServers          5
</span><span class='line'>    MinSpareServers       5
</span><span class='line'>    MaxSpareServers      10
</span><span class='line'>    MaxClients          150
</span><span class='line'>    MaxRequestsPerChild   0
</span><span class='line'>&lt;/IfModule&gt;</span></code></pre></td></tr></table></div></figure>


<h2>Setting up virtual host with apache</h2>

<p>A very simple set up would be to create the following <code>/etc/apache2/sites-available/myacedomainname.com</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#Ensure that Apache listens on port 80
</span><span class='line'>#Listen 80 (note uncomment this with ports.conf set to 80 and you will experience a WORLD of pain!)
</span><span class='line'>
</span><span class='line'># Listen for virtual host requests on all IP addresses
</span><span class='line'>NameVirtualHost *:80
</span><span class='line'>
</span><span class='line'>&lt;VirtualHost *:80&gt;
</span><span class='line'>DocumentRoot /var/www/myacedomainname.com
</span><span class='line'>ServerName www.myacedomainname.com
</span><span class='line'>
</span><span class='line'># Other directives here
</span><span class='line'>
</span><span class='line'>&lt;/VirtualHost&gt;</span></code></pre></td></tr></table></div></figure>


<h2>Enable site (and other useful commands)</h2>

<p>Create that file in sites-available and use the following commands to enable/disable - they will give you options when they run as to which sites you want to enable/disable</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo a2ensite
</span><span class='line'>sudo a2dissite</span></code></pre></td></tr></table></div></figure>


<p>Force reload configuration?</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo  /etc/init.d/apache2 force-reload</span></code></pre></td></tr></table></div></figure>


<h2>Install PHP</h2>

<p>Ok, well to get WordPress running, we&#8217;re going to need some PHP, so get it installed</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>apt-get install php5 libapache2-mod-php5</span></code></pre></td></tr></table></div></figure>


<h2>Install MySQL</h2>

<p>And we&#8217;ll need a database too</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>apt-get install mysql-server mysql-client php5-mysql</span></code></pre></td></tr></table></div></figure>


<p>If already installed, but you want to reset it so you can set root password etc, give it a bit of this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo dpkg-reconfigure mysql-server-5.1</span></code></pre></td></tr></table></div></figure>


<h2>Migrating a site from another provider</h2>

<h3>Database gubbins</h3>

<p>Get a database dump from your old site, either using PHPMyAdmin if installed, or doing a dump from the command line using <code>mysqldump</code>. Hopefully at the end of that process you&#8217;ll be able to import the dump in to your new set up with a bit of:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mysql -uroot -p &lt; databasedump.sql</span></code></pre></td></tr></table></div></figure>


<p>The dump may contain a create database statement to create the database, right at the top along the lines of</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>CREATE DATABASE `db1234` DEFAULT CHARACTER SET latin1 COLLATE latin1_german2_ci; USE db1234;</span></code></pre></td></tr></table></div></figure>


<p>Now you&#8217;ll need to create a database user for WordPress to use. So make sure you&#8217;ve got a file dump of your WordPress installation, either by command line, or the hosting admin suite, or an FTP application or whatever you&#8217;re comfortable with. You&#8217;re going to need your wp-config.php file which will tell you how your existing WordPress site is set up. This is the bit you need to look at for now</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/** The name of the database for WordPress */
</span><span class='line'>define('DB_NAME', 'db1234');
</span><span class='line'>
</span><span class='line'>/** MySQL database username */
</span><span class='line'>define('DB_USER', 'dbuser');
</span><span class='line'>
</span><span class='line'>/** MySQL database password */
</span><span class='line'>define('DB_PASSWORD', 'dbpassword');
</span><span class='line'>
</span><span class='line'>/** MySQL hostname */
</span><span class='line'>define('DB_HOST', 'localhost');
</span><span class='line'>
</span><span class='line'>/** Database Charset to use in creating database tables. */
</span><span class='line'>define('DB_CHARSET', 'utf8');
</span><span class='line'>
</span><span class='line'>/** The Database Collate type. Don't change this if in doubt. */
</span><span class='line'>define('DB_COLLATE', '');</span></code></pre></td></tr></table></div></figure>


<p>So in your existing set up you have a database user called <code>dbuser</code> with password <code>dbpassword</code> so create that user in your new setup as follows</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>grant all on db1234.* to 'dbuser'@'localhost' identified by 'dbpassword';</span></code></pre></td></tr></table></div></figure>


<p>Then make sure it works with a bit of <code>mysql -udbuser -Ddb1234 -p</code> enter your password and hopefully you are in.</p>

<h3>Filesystem</h3>

<p>Now get that dump of the filesystem you have and unpack it in <code>/var/www/myacedomain.com</code> or whatever you set in your virtual hosts configuration earlier. You may need to change the ownership of everything, including that directory to www-data with a bit of</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo chown -R www-data:www-data /var/www/myacedomain.com</span></code></pre></td></tr></table></div></figure>


<p>
and check the permissions too, directories should be set to 755 and files to 644. You can enforce this with</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo find . -type f -print | sudo xargs chmod 644  # Files
</span><span class='line'>sudo find . -type d -print | sudo xargs chmod 755  # Directories</span></code></pre></td></tr></table></div></figure>


<p>It is entirely possible that after all this, you can now hit <code>http://myacedomain.com</code> or <code>http://123.456.789.012</code> and see your migrated WordPress site!</p>

<h3>UTF-8 issues</h3>

<p>Now, one issue I&#8217;ve had in the past is problems with UTF-8 conversion. I.e. the posts you&#8217;ve migrated end up with funny characters like â€“ â€œ â€™ â€ - you can tell if this is causing you grief because you see the characters mixed up in your posts, but if you comment out these lines (by adding // in front) in your WordPress config, then they.. ahem, magically go away</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>define('DB_CHARSET', 'utf8');
</span><span class='line'>define('DB_COLLATE', '');</span></code></pre></td></tr></table></div></figure>


<p>Best not to do that though, you <em>can</em> use the <a href="http://wordpress.org/extend/plugins/search-and-replace/">search and replace</a> WordPress plugin to replace all the dodgy characters in the database. Find &#8220;â&#8221; and replace with &#8220;&#8221; - hooray!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting up a Fresh Debian Server]]></title>
    <link href="http://jamesjefferies.com/2012/08/22/setting-up-a-fresh-debian-server/"/>
    <updated>2012-08-22T14:41:00+01:00</updated>
    <id>http://jamesjefferies.com/2012/08/22/setting-up-a-fresh-debian-server</id>
    <content type="html"><![CDATA[<h2>Accessing the server</h2>

<p>Once set up, you will have the IP address, in the form 123.456.789.012 and the root password. This means you will be able to log on to the server using ssh (secure shell), i.e.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh root@123.456.789.012</span></code></pre></td></tr></table></div></figure>


<p>You will get a message along the lines of</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>The authenticity of host '123.456.789.012(123.456.789.012)' can't be established. RSA key fingerprint is blah blah bla
</span><span class='line'>Are you sure you want to continue connecting (yes/no)?</span></code></pre></td></tr></table></div></figure>


<p>to which you will reply</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>yes</span></code></pre></td></tr></table></div></figure>


<p>and you will then get</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Warning: Permanently added '123.456.789.012' (RSA) to the list of known hosts.
</span><span class='line'>root@123.456.789.012's password: </span></code></pre></td></tr></table></div></figure>


<p>which is when you can enter your password. Hopefully then you&#8217;ll be logged on to the server.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>blah blah blah snip…
</span><span class='line'>servername:~# </span></code></pre></td></tr></table></div></figure>


<h3>First things first</h3>

<p>Root access is the super user for your server. You really don&#8217;t want to have people being able to log on to your server as root. What you really need is to have user accounts which people can use to log on, and if/when required, they can get super user privileges to do whatever they need to do.</p>

<p>What we are going to do is to stop root being able to secure shell straight in to the server, create a new user account to use for our admin (with upgradable privileges) and run ssh on a different port to deter basic attacks.</p>

<h3>Change root&#8217;s password!</h3>

<p>So you have a default root password - CHANGE IT to a new one! From a root prompt, use <code>passwd</code> to change the password</p>

<h3>Adding a new user</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>adduser james</span></code></pre></td></tr></table></div></figure>


<p>Will create a new user, called James - you can add in extra details as you go like full name etc.</p>

<p>Now we want to allow james a bit of privilege, not by default though, but by using the sudo command.</p>

<h4>Aside - setting default editor to be vi</h4>

<p>By default, for all users, you may want to use vi as your editor (ok, you may not, but I do!) so add the following to <code>/etc/profile</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>EDITOR=vi
</span><span class='line'>export EDITOR</span></code></pre></td></tr></table></div></figure>


<h3>Giving the new user sudo privileges</h3>

<p>You may need to install sudo if it isn&#8217;t already installed on your server. It&#8217;s a simple case of</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>apt-get install sudo</span></code></pre></td></tr></table></div></figure>


<p>Then, the application <code>visudo</code> is your friend. You edit the config file using visudo and then sudo does the rest. When you open the file, you&#8217;ll see a section with:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># User privilege specification
</span><span class='line'>root    ALL=(ALL) ALL
</span><span class='line'>admin ALL = (ALL) ALL
</span><span class='line'>james ALL = (ALL) ALL</span></code></pre></td></tr></table></div></figure>


<p>By adding my own entry, it allows me to upgrade my user to super user privileges for all actions. You can limit the commands which users can run if you like using this, but if you are going to be the super user, you probably want to leave it as all.</p>

<h2>Sorting out access</h2>

<p>Let&#8217;s stop people attempting to log on to the server as <a href="http://www.howtogeek.com/howto/linux/security-tip-disable-root-ssh-login-on-linux/">root via ssh</a> and also to run ssh on a different port than the default. There is a lot of good advice <a href="http://www.foogazi.com/2006/11/29/modify-ssh-to-maximize-security/">here</a></p>

<h3>Amend port</h3>

<p>The default port is 22, change this to something else, which isn&#8217;t being used by anything else</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># What ports, IPs and protocols we listen for
</span><span class='line'>Port 60</span></code></pre></td></tr></table></div></figure>


<h3>Stop root login</h3>

<p>Now stop people logging in as root</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>PermitRootLogin no</span></code></pre></td></tr></table></div></figure>


<h3>Some other bits</h3>

<p>Give maximum number of log in attempts to be 3, only allow james to login.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>MaxAuthTries 3
</span><span class='line'>AllowUsers james </span></code></pre></td></tr></table></div></figure>


<h3>Restart sshd</h3>

<p>As root (or sudo)</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/etc/init.d/ssh restart</span></code></pre></td></tr></table></div></figure>


<p>Now try logging in remotely from a different shell (i.e. keep the one you&#8217;ve just restarted sshd on open in case you have any problems!)</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh -p60 james@123.456.789.0123</span></code></pre></td></tr></table></div></figure>


<p>obviously set the p to be the port you set earlier.</p>

<h3>Stop chancers getting in</h3>

<p>It&#8217;s also a good idea to stop people attempting to log on to your server using common passwords, usernames etc. A good way to do this is to install the <a href="http://en.wikipedia.org/wiki/Fail2ban">fail2ban</a> which goes some way to banning people trying to brute force their way in to your server.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>apt-get install fail2ban</span></code></pre></td></tr></table></div></figure>


<p>Default settings are pretty good here.</p>

<h2>Firewall configuration</h2>

<p>UFW or Uncomplicated Firewall is a good first port of call for securing your shiny new server. You can install it as root with</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>apt-get install ufw</span></code></pre></td></tr></table></div></figure>


<p>Now, unlike fail2ban, ufw is installed switched off. You need to configure a few things before getting it up and running and providing that extra security. By default ALL ports are shut, so make sure you&#8217;ve opened up the ones you need before switching the firewall on!</p>

<p>For example, if you&#8217;ve set up your ssh to run on port 60, then you need to run</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ufw allow 60</span></code></pre></td></tr></table></div></figure>


<p>If you&#8217;re going to be running apache on port 80 (the usual)</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ufw allow 80</span></code></pre></td></tr></table></div></figure>


<p>Here are a few <a href="http://www.mmncs.com/2011/07/this-guide-shows-howto-install-and-setup-uncomplicatedfirewall-ufw-on-linux-ubuntu-10-04-and-11-04-and-other-debian-distributions/">notes</a></p>

<p>Don&#8217;t forget to run <code>ufw enable</code> when you are ready! <code>ufw status</code> tells you what is set up.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[From MySQL datadump to mongo]]></title>
    <link href="http://jamesjefferies.com/2012/08/16/from-mysql-datadump-to-mongo/"/>
    <updated>2012-08-16T14:42:00+01:00</updated>
    <id>http://jamesjefferies.com/2012/08/16/from-mysql-datadump-to-mongo</id>
    <content type="html"><![CDATA[<p>Let us say that you have a MySQL dump of  a database table, with a load of data which ideally, you&#8217;d like to pull into a Mongo DB as json.</p>

<p>What you could do is…</p>

<h2>Import data in to MySQL database</h2>

<p>Usual kind of thing here, assuming you have a MySQL username for a created database:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mysql -uusername -p -Ddbname &lt; mysqldumpfile.sql</span></code></pre></td></tr></table></div></figure>


<h2>Export data from MySQL database in json format</h2>

<p>There is a cracking ruby gem <a href="https://github.com/seamusabshere/mysql2xxxx">mysql2xxxx</a> which will export from a mysql database to various formats, including json.</p>

<p>You can drive it via code or a number of binaries are provided. So:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mysql2json --user=username --password=password --database=dbname --execute="select * from my_special_table" &gt; my_special_file.json</span></code></pre></td></tr></table></div></figure>


<h2>Importing the json straight in to your mongodb</h2>

<p>Then you can use mongoimport to pull in the json. If your export from <code>mysql2json</code> is surrounded by the square brackets, you&#8217;ll need the <code>--jsonArray</code> option. Your command will need to be something like:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mongoimport --type json --file my_special_file.json --collection mycollection --db mymongodb --jsonArray</span></code></pre></td></tr></table></div></figure>


<h2>Summary</h2>

<p>Simple three step transformation from MySQL dump to Mongo. You may know a better, more straightforward way of doing this, please add a comment if you do!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Parse Train Describer CSV Data]]></title>
    <link href="http://jamesjefferies.com/2012/08/16/parse-train-describer-csv-data/"/>
    <updated>2012-08-16T12:35:00+01:00</updated>
    <id>http://jamesjefferies.com/2012/08/16/parse-train-describer-csv-data</id>
    <content type="html"><![CDATA[<p>If you are using the Network Rail Open Data Feeds, then hopefully you&#8217;ve had a look at the fantastic <a href="http://wiki.openraildata.info/index.php/TD_Berth_Steps">wiki</a> started by <a href="http://twitter.com/poggs">poggs</a>.</p>

<p>In the reference data section, it provides a link to a CSV file which poggs is sharing containing Train Describer berths.</p>

<p>I wanted to parse that data using a simple ruby script and get it in to my mongo database.</p>

<p>You can use the mongoimport program to pull in the CSV by adding a header file, or you can use this little ruby script I wrote (with a <em>lot</em> of help from this <a href="http://www.dzone.com/snippets/turn-csv-headers-array-hashes">snippet</a>) which converts to JSON and inserts it in to the mongo db.</p>

<div><script src='https://gist.github.com/3369575.js?file='></script>
<noscript><pre><code>require 'csv'
require 'json'
require 'mongo'
=begin

Info from http://http://wiki.openraildata.info/index.php/TD_Berth_Steps

# Example header
# td_area,step_type,from_berth,to_berth,stanox,stanme,event,platform,line,trust_berth_offset,route,line,description

# Example data
AD,B,0632,0630,89321,PLUCKLY,A,1,,24,,,08-05-2012
=end

FILENAME=&quot;BerthStepsFile.csv&quot;

# You might want to change this, easily done
HEADER = ['td_area','step_type','from_berth','to_berth','stanox','stanme','event','platform','line','trust_berth_offset','route','line','description']

csv_data = CSV.read FILENAME

headers = HEADER.map {|i| i.to_s }
string_data = csv_data.map {|row| row.map {|cell| cell.to_s } }
array_of_hashes = string_data.map {|row| Hash[*headers.zip(row).flatten] }

# Assume mongo database is called rail (or it will create one if it doesn't exist)
db = Mongo::Connection.new.db(&quot;rail&quot;)

# Create/use collection called berthsteps
coll = db.collection(&quot;berthsteps&quot;)

array_of_hashes.each do |td|

  # Sanity check debug, output each td message as nice looking JSON 
  #puts JSON.pretty_generate(td)   

  # insert into collection and return with the id 
  id = coll.insert(td)

end</code></pre></noscript></div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Before you buy a Berg Little Printer...]]></title>
    <link href="http://jamesjefferies.com/2012/08/14/before-you-buy-a-berg-little-printer-dot-dot-dot/"/>
    <updated>2012-08-14T19:56:00+01:00</updated>
    <id>http://jamesjefferies.com/2012/08/14/before-you-buy-a-berg-little-printer-dot-dot-dot</id>
    <content type="html"><![CDATA[<p>You may have heard today that <a href="http://bergcloud.com/littleprinter/">BERG&#8217;s Little Printer</a> is now available for pre-order. It does look like a great bit of kit &amp; the ability to produce your own content should produce some interesting rolls of paper!</p>

<p>Anyways, before you splash out with your hard earned £199 + P&amp;P you should, you <em>really</em> should have a look at <a href="http://gofreerange.com/printer">Go free range&#8217;s Open Source printer</a>.</p>

<p>Not only are they cheaper than the Little Printer, but being Open Source &amp; built using Rails &amp; Arduino, you can get stuck in to the source code, make changes yourself and create some interesting content.</p>

<p>As part of the <a href="http://happenstanceproject.com">Happenstance Project</a> we were fortunate to borrow a couple of Go free range&#8217;s printers and start experimenting. We hooked them up with <a href="http://twilio.com">Twilio</a> and a bit of ruby magic to get them recieving SMS messages. Each printer (Cathy &amp; Heathcliff) had their own phone numbers, when they recieved the message, they printed it out &amp; sent the contents to their twitter feeds.</p>

<p>You can read more on this blog <a href="http://jamesjefferies.com/2012/05/04/week-3-cathy-heathcliffs-amazing-adventures/">elsewhere</a> or you can watch our <a href="http://tedxtalks.ted.com/video/TEDxSheffield-2012-Leila-Johnst">TEDx</a> talk on the project as a whole.</p>

<p>So, buy all means pre-order a Little Printer, but have a think about getting the super duper Go Free Ranger printer first!</p>

<p><img src="http://25.media.tumblr.com/tumblr_m4uf1acC5R1rvn0edo1_500.jpg" title="Cathy Long Cat" alt="Cathy long cat" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Importing Network Rail Train Movement feeds into MongoDB]]></title>
    <link href="http://jamesjefferies.com/2012/08/07/importing-network-rail-train-movement-feeds-into-mongodb/"/>
    <updated>2012-08-07T14:33:00+01:00</updated>
    <id>http://jamesjefferies.com/2012/08/07/importing-network-rail-train-movement-feeds-into-mongodb</id>
    <content type="html"><![CDATA[<h2>Network Rail datafeeds?</h2>

<p>Ah yes, please my previous <a href="http://jamesjefferies.com/2012/07/04/getting-started-with-network-rails-datafeeds/">blog</a> post for further info, apologies for the lack of updates on here, I&#8217;ve been away, sent round the loop line.</p>

<h2>Why MongoDB?</h2>

<p><a href="http://www.mongodb.org/">MongoDB</a> is a scalable, high-performance, open source, NoSQL database. I thought it would make a good fit for the train movement feeds as it&#8217;s storage is oriented towards JSON-style documents. It&#8217;s JSON-style because it actually uses <a href="http://bsonspec.org/">binary-encoded serialisation</a> behind the scenes.</p>

<p>There is a nice little interactive tutorial on the MongoDB home page to get you in to the swing of things.</p>

<h2>Getting Mongo installed on OS X</h2>

<p>I use <a href="http://mxcl.github.com/homebrew/">Homebrew</a> for installing packaged stuff on to my Mac, if you use it, then you can easily install it with</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>brew install mongodb</span></code></pre></td></tr></table></div></figure>


<h2>What do you need for Ruby Mongo Magic?</h2>

<p>There is a standard Mongo driver available, which you can install using gem</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem install mongo</span></code></pre></td></tr></table></div></figure>


<p>but it is also worth installing the C compiled extension to speed up any BSON serialisation</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem install bson_ext</span></code></pre></td></tr></table></div></figure>


<p>More info can be found on the <a href="http://www.mongodb.org/display/DOCS/Ruby+Language+Center">official pages</a></p>

<h2>Code example?</h2>

<p>Here you go, proper version in the <a href="https://github.com/jamesjefferies/national-rail-datafeeds-ruby-examples">github repository</a></p>

<div><script src='https://gist.github.com/3285558.js?file='></script>
<noscript><pre><code>require 'rubygems' 
require 'stomp'
require 'json'
require 'mongo'

begin
  # Credentials set here as environment variables
  @user = ENV[&quot;DATAFEEDS_USER&quot;]; 
  @password = ENV[&quot;DATAFEEDS_PASSWORD&quot;]
  @host = &quot;datafeeds.networkrail.co.uk&quot;
  @port = 61618

  # Example destination add yours here
  @destination = &quot;/topic/TRAIN_MVT_ALL_TOC&quot;

  puts &quot;Connecting to datafeeds as #{@user} using stomp protocol stomp://#{@host}:#{@port}\n&quot; 
  @connection = Stomp::Connection.open @user, @password, @host, @port, true 
  @connection.subscribe @destination 

  while true
    @msg = @connection.receive

    # Use JSON library to parse the messge body
    message_body = JSON.parse(@msg.body)

    db = Mongo::Connection.new.db(&quot;rail&quot;)
    coll = db.collection(&quot;td&quot;)

    message_body.each do |td| 

      # Sanity check debug, output each td message as nice looking JSON 
      # puts JSON.pretty_generate(td)   
      
      # insert into collection
      id = coll.insert(td)

    end
  end 

  @connection.disconnect
rescue 
end</code></pre></noscript></div>


<h2>Examples of querying Mongo</h2>

<p>There are lots of good examples and resources for using Mongo, but just a couple of examples related to the schema I&#8217;ve used in the example. You can fire up the interactive Mongo console and try the following (once you have some data!)</p>

<p>To retrieve all Departure events</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>db.td.find({ "body.event_type" : "DEPARTURE" })</span></code></pre></td></tr></table></div></figure>


<p>To retrieve 10 (using limit) Train Movement (type 3) messages</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>db.td.find({ "header.msg_type" : "0003" }).limit(10)</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Moving from WordPress to Octopress]]></title>
    <link href="http://jamesjefferies.com/2012/08/01/moving-from-wordpress-to-octopress/"/>
    <updated>2012-08-01T12:43:00+01:00</updated>
    <id>http://jamesjefferies.com/2012/08/01/moving-from-wordpress-to-octopress</id>
    <content type="html"><![CDATA[<h2>What is Octopress?</h2>

<p><a href="http://octopress.org">Octopress</a> is a blogging engine designed to be run from the command line, it uses Markdown for formatting content and doesn&#8217;t have any built in GUI editing facilities.</p>

<p>It is worth looking at though because it generates static HTML files, so you don&#8217;t need a database, you don&#8217;t need PHP you just need to serve straight forward files.</p>

<p>The integration with github pages is very nice, so you can actually use github to host your blog or website leaving them to worry about server admin etc!</p>

<h2>Why did I switch?</h2>

<p>At the moment, my virtual server was only hosting my blog and nothing else. At the moment, I don&#8217;t need it for anything else, so being able to move to github pages for free was one draw, saving me £X a month. When I need a server again, I&#8217;ll set one up.</p>

<p>I having nothing against WordPress per se, but it wasn&#8217;t very hackable by me, a non-PHP developer. Now with Octopress, it seems a lot more straight forward. Plus I no longer have a MySQL or PHP install to maintain.</p>

<p>It <em>feels</em> like the Octopress templates are more designer friendly. I&#8217;ll let you know if that is the case!</p>

<p>My site now has very straightforward version control, powered by git.</p>

<h2>How does it work?</h2>

<p>You check out the <a href="https://github.com/imathis/octopress">source</a> (from github of course). The html generating engine is written in ruby, so you need to have that installed. Once set up and configured, you can push your content using git to wherever you want to deploy it.</p>

<p>When you deploy, octopress turns your markdown and HTML templates in to straight forward HTML pages ready to be served.</p>

<p>It uses Disqus by default for comments, but if you have a WordPress account, you can set that up with Disqus before migration. Works a treat.</p>

<h2>Exiting WordPress</h2>

<p>At first I tried the ruby WordPress migrating script. Basically it was not very good and I think I wasted a fair bit of time on it. Better is the Python <a href="https://github.com/thomasf/exitwp">exitwp.py</a> script which is.. brilliant!</p>

<h2>Downsides</h2>

<ul>
<li>There is a much smaller plugin selection available</li>
<li>You generally re-generate the whole site when you want to publish something new (there are ways around that though, to selectively generate new content).</li>
<li>If you had a blog with a lot of posts, then it might take some time to generate.</li>
<li>Small amount of off-the-shelf themes</li>
</ul>


<h2>Upsides</h2>

<ul>
<li>The standard plugins you might want are available, twitter, github, google analytics.</li>
<li>Github pages integration is very straightforward</li>
<li>Simple caching can be set up if required, but no more W3 Total Cache Super Plugin things</li>
<li>No WordPress security loopholes and patches</li>
<li>No PHP or MySQL loopholes or patches</li>
<li>Fast</li>
<li>Relatively lightweight page sizes</li>
<li>Nice default, responsive design</li>
</ul>


<h2>Theme</h2>

<p>I&#8217;m using a slightly customised default theme at the moment, but hopefully will have a bespoke one up and running soon.</p>

<h2>Summary</h2>

<p>Now I&#8217;m migrated, I&#8217;m liking it so far, let me know what you think..</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Downloading the Network Rail Schedules]]></title>
    <link href="http://jamesjefferies.com/2012/07/18/downloading-the-network-rail-schedules/"/>
    <updated>2012-07-18T17:43:39+01:00</updated>
    <id>http://jamesjefferies.com/2012/07/18/downloading-the-network-rail-schedules</id>
    <content type="html"><![CDATA[<p>As well as the live feeds which you can subscribe to for the Network Rail data, you can also download the Schedule feed which is delivered by Amazon S3. The Schedule feed is an extract of train schedules from the Integration Train Planning System.</p>

<p>When you have your Network Rail account you can subscribe, either to all the data, or to the Train Operators you are interested in. However, at the time of writing, the only feed which works is the one for ALL the data, the Train Operator specific downloads throw an unhelpful error</p>

<blockquote><p>HTTP Status 401 - User not subscribed to CIF_HL_FULL_DAILY</p></blockquote>

<p>Which is a bit rubbish really. So my advice is, at this point to subscribe to ALL the data rather than just for one TOC. You can then access the feeds and download the zip file with either:</p>

<p><a href="https://datafeeds.networkrail.co.uk/ntrod/CifFileAuthenticate?type=CIF_ALL_FULL_DAILY&amp;day=toc-full">https://datafeeds.networkrail.co.uk/ntrod/CifFileAuthenticate?type=CIF_ALL_FULL_DAILY&amp;day=toc-full</a></p>

<p>for the full feed or, say</p>

<p><a href="https://datafeeds.networkrail.co.uk/ntrod/CifFileAuthenticate?type=CIF_ALL_UPDATE_DAILY&amp;day=toc-mon">https://datafeeds.networkrail.co.uk/ntrod/CifFileAuthenticate?type=CIF_ALL_UPDATE_DAILY&amp;day=toc-mon</a></p>

<p>for Monday&#8217;s update.</p>

<p>Note that you will need to authenticate if you haven&#8217;t already, using your username and password.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Electrified Spine (and the rest of the news)]]></title>
    <link href="http://jamesjefferies.com/2012/07/16/the-electrified-spine-and-the-rest-of-the-news/"/>
    <updated>2012-07-16T15:39:04+01:00</updated>
    <id>http://jamesjefferies.com/2012/07/16/the-electrified-spine-and-the-rest-of-the-news</id>
    <content type="html"><![CDATA[<p>Today the government has announced a further set of infrastructure investment for the railways. This has to be good news, especially where electrification is concerned. Electric trains are more efficient, cleaner and perform better than their diesel (and steam I suppose!) counterparts. I appreciate that the electricity still has to come from somewhere, but in the main it is the right thing to do.</p>

<h2>Already Announced</h2>

<p>We know that plans to electrify the Great Western Mainline (Paddington to Cardiff, Bristol, Oxford &amp; Newbury), plus the Trans-Pennine route between Manchester &amp; York, Blackpool and Manchester to Liverpool are already underway. These are all good things, but there were some unsatisfactory omissions. The new announcement helps with some of the missing links, but not all of them.</p>

<p>There is a helpful <a href="http://assets.dft.gov.uk/publications/hlos-2012/map-hlos-electrification.pdf">map</a> which shows these routes in glorious technicolour</p>

<h2>New Plans - Midland Mainline</h2>

<p>Hooray, the Midland Mainline, which has been electrified to Bedford for many years is to be electrified to Nottingham and Sheffield (via Derby). For those of us who regularly travel to London from Sheffield we should experience a faster service. Not necessarily more trains though, no extra track is to be laid and unless signalling is replaced, you can&#8217;t fit that many more trains on the track.</p>

<p>As far as I&#8217;m aware, there has been no announcement about rolling stock either, the simple solution for East Midlands Trains (assuming they&#8217;re still running the franchise) will be to get the existing Meridian trains upgraded with an extra coach containing all of the required electrical equipment, plus pantograph for current collection etc. Easier said than done, but a lot cheaper than brand new trains. So it is likely you&#8217;ll still be sitting on the same seat.</p>

<h2>Missed Opportunities - Midland Mainline</h2>

<h3>Erewash Valley</h3>

<p>Why or why isn&#8217;t the Erewash valley route included as part of the plans? This is the line which goes straight on at the junction for Derby and Nottingham, joining up with the Sheffield line between Clay Cross and Chesterfield - it&#8217;s the most direct route to Sheffield and is useful when engineering works close the route via Derby. Very few London bound trains use this route, most are routed via Derby from Sheffield, but electrifying it would be useful for diversions and could give the opportunity for Sheffield, Leicester, London services which don&#8217;t call at Derby, potentially shaving more time off the journey.</p>

<h3>Sheffield to Leeds</h3>

<p>Groan, everybody wants a better service between Leeds and Sheffield, the best being the 45 minute Cross Country packed like a sardine train which goes via Wakefield. Why not electrify that route too so that more London trains can be extended easily to Leeds? Plus get some more electrified suburban stoppers on that route. Derby to Leeds semi-fast?</p>

<h3>Sheffield to Doncaster</h3>

<p>Whilst we&#8217;re at it, how about the link to Doncaster too, providing more opportunities for diversions and commuter services?</p>

<h2>New Plans - Oxford to Corby &amp; Nuneaton</h2>

<p>This wasn&#8217;t on my radar at all, but makes a lot of sense for new cross country routes as well as faster Birmingham to London trains via Oxford. Incorporating the start of the Oxford to Cambridge route (as far as Bedford) makes sense with that re-opening. The potential for new routes, well re-establishing old routes should give that part of the country a much better service.</p>

<h2>New Plans - Reading to Southampton</h2>

<p>Cross country trains mainly use this route at the moment and it is partially already electrified using the Southern standard 3rd Rail system. Over the next&#8230; err.. 50 years (?) the 3rd rail system will be phased out and replaced with the standard 25kv AC overhead system. This is the beginning of that process and also good preparation for Cross Country. Birmingham to Southampton trains will be electric all the way, as might, say Sheffield to Southampton trains, routed via Oxford.</p>

<h2>The Spine</h2>

<p>According to the plan, the Electrified Spine is to be the Southampton to Coventry and Sheffield routes and is a piece of spin. If I had a spine looking like that I&#8217;d be worried! The only new route, as far as I can see is the already announced re-opening of the Oxford to Bedford route, everywhere else is straightforward electrification.</p>

<h2>Summary</h2>

<p>I&#8217;m very happy to see these extra plans announced, but would like to understand more about why some very obvious links and connections have been omitted. What to others think?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Getting started with Network Rail's datafeeds]]></title>
    <link href="http://jamesjefferies.com/2012/07/04/getting-started-with-network-rails-datafeeds/"/>
    <updated>2012-07-04T23:46:41+01:00</updated>
    <id>http://jamesjefferies.com/2012/07/04/getting-started-with-network-rails-datafeeds</id>
    <content type="html"><![CDATA[<p>I&#8217;ve had a few railway project ideas knocking around for ages now, but have had a couple of blockers which have meant they have not progressed. Mainly lack of time and lack of data! I&#8217;m therefore clearing the decks for July and August to spend some decent time working on these ideas, which also co-incides with Network Rail giving access to a new platform providing live data feeds. You may have heard about <a href="http://www.techweekeurope.co.uk/news/network-rail-open-data-feeds-83128">the launch</a>, I believe the platform was developed in conjunction with <a href="http://rockshore.net/">Rockshore</a>, well, it&#8217;s what this <a href="https://twitter.com/rockshoreltd/status/218323058493108224">tweet</a> says anyway.</p>

<h2>Where do you start?</h2>

<p>If you are interested in using the datafeeds yourself, you can read all about it on <a href="http://www.networkrail.co.uk/data-feeds/">Network Rail&#8217;s site</a> which also has a link to download the developer&#8217;s guide in PDF format.</p>

<p>First, you need to <a href="https://datafeeds.networkrail.co.uk/ntrod/login">create an account</a> - I believe there are limited numbers of accounts going at the moment, so the sooner you do that, the better.</p>

<p>There are two types of feeds available, pub/sub using the stomp protocol for real-ish time data &amp; downloads of huge files from Amazon S3 for timetables etc.</p>

<p>Once your account is active, you can subscribe to any of the pub/sub datafeeds you like and away you go.</p>

<h2>Receiving Messages</h2>

<p>I decided that I was going to try accessing the pub/sub datafeeds using Ruby (not my usual language) and put my experimental code on to my git hub account. Feel free to <a href="https://github.com/jamesjefferies/national-rail-datafeeds-ruby-examples">have a look and check it out</a>, I&#8217;ll be using it for my initial experiments, so it should get updated beyond this basic example!</p>

<p>I&#8217;ve also included a sample, no error checking, very straightforward listener below. If you wish to try and run it, then you will of course need Ruby and Ruby gems installed, plus the stomp ruby gem.</p>

<p>Then, you just need to ensure your username and password are set as the relevant environment variables and away you go.</p>

<p>All being well, you should slowly receive updates from the topic you have selected. The example below uses Train positioning data for the East Midlands (TD_MC_EM_SIG_AREA) and assumes that you have subscribed to that feed using the <a href="https://datafeeds.networkrail.co.uk/ntrod/myFeeds">network rail control panel</a></p>

<p>The updates you receive from this program are not formatted at all, it&#8217;s just sending the message straight to string. Of course, this is just helping you know you&#8217;re set up correctly. So you would get something like:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="no">Stomp</span><span class="o">::</span><span class="no">Message</span> <span class="n">headers</span><span class="o">=</span><span class="p">{</span><span class="s2">&quot;message-id&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;ID:blahblah&quot;</span><span class="p">,</span> <span class="s2">&quot;destination&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;/topic/TD_MC_EM_SIG_AREA&quot;</span><span class="p">,</span> <span class="s2">&quot;timestamp&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;1341436026840&quot;</span><span class="p">,</span> <span class="s2">&quot;expires&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;1341436326840&quot;</span><span class="p">,</span> <span class="s2">&quot;persistent&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;true&quot;</span><span class="p">,</span> <span class="s2">&quot;priority&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;4&quot;</span><span class="p">}</span> <span class="n">body</span><span class="o">=</span><span class="s1">&#39;[{&quot;CA_MSG&quot;:{&quot;to&quot;:&quot;1234&quot;,&quot;time&quot;:&quot;1341435963000&quot;,&quot;area_id&quot;:&quot;WH&quot;,&quot;msg_type&quot;:&quot;CA&quot;,&quot;from&quot;:&quot;5678&quot;,&quot;descr&quot;:&quot;1Z99&quot;}}]&#39;</span> <span class="n">command</span><span class="o">=</span><span class="s1">&#39;MESSAGE&#39;</span> <span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ultimately of course, you&#8217;d process the JSON from the body and do something with it.</p>

<h2>Example Ruby Listener</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;rubygems&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;stomp&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">begin</span>
</span><span class='line'>  <span class="c1"># Credentials set here as environment variables</span>
</span><span class='line'>  <span class="vi">@user</span> <span class="o">=</span> <span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;DATAFEEDS_USER&quot;</span><span class="o">]</span><span class="p">;</span>
</span><span class='line'>  <span class="vi">@password</span> <span class="o">=</span> <span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;DATAFEEDS_PASSWORD&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="vi">@host</span> <span class="o">=</span> <span class="s2">&quot;datafeeds.networkrail.co.uk&quot;</span>
</span><span class='line'>  <span class="vi">@port</span> <span class="o">=</span> <span class="mi">61618</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># Example destination add yours here</span>
</span><span class='line'>  <span class="vi">@destination</span> <span class="o">=</span> <span class="s2">&quot;/topic/TD_MC_EM_SIG_AREA&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Connecting to datafeeds as </span><span class="si">#{</span><span class="vi">@user</span><span class="si">}</span><span class="s2"> using stomp protocol stomp://</span><span class="si">#{</span><span class="vi">@host</span><span class="si">}</span><span class="s2">:</span><span class="si">#{</span><span class="vi">@port</span><span class="si">}</span><span class="se">\n</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="vi">@connection</span> <span class="o">=</span> <span class="no">Stomp</span><span class="o">::</span><span class="no">Connection</span><span class="o">.</span><span class="n">open</span> <span class="vi">@user</span><span class="p">,</span> <span class="vi">@password</span><span class="p">,</span> <span class="vi">@host</span><span class="p">,</span> <span class="vi">@port</span><span class="p">,</span> <span class="kp">true</span>
</span><span class='line'>  <span class="vi">@connection</span><span class="o">.</span><span class="n">subscribe</span> <span class="vi">@destination</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">while</span> <span class="kp">true</span>
</span><span class='line'>    <span class="vi">@msg</span> <span class="o">=</span> <span class="vi">@connection</span><span class="o">.</span><span class="n">receive</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="vi">@msg</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="vi">@connection</span><span class="o">.</span><span class="n">disconnect</span>
</span><span class='line'><span class="k">rescue</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
