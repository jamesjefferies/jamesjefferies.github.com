<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Grub2 | James Jefferies and ShedCode Ltd]]></title>
  <link href="http://jamesjefferies.com/categories/grub2/atom.xml" rel="self"/>
  <link href="http://jamesjefferies.com/"/>
  <updated>2013-02-17T17:30:06+00:00</updated>
  <id>http://jamesjefferies.com/</id>
  <author>
    <name><![CDATA[James Jefferies]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Olympic legacy server setup - part 3 - installing Ubuntu server]]></title>
    <link href="http://jamesjefferies.com/2013/01/03/olympic-legacy-server-setup-part-3-installing-ubuntu-server/"/>
    <updated>2013-01-03T15:22:00+00:00</updated>
    <id>http://jamesjefferies.com/2013/01/03/olympic-legacy-server-setup-part-3-installing-ubuntu-server</id>
    <content type="html"><![CDATA[<p>I was thinking about a Debian install on my server, but in the end, I thought I'd go with Ubuntu server.</p>

<h2>Ubuntu server install</h2>

<p>I'm not going in to all the details about installing Ubuntu server (debian would be similar), but I thought it would be worth noting the steps I made to get the RAID device partitioned ready for installing xen or KVM.</p>

<h3>RAID configuration</h3>

<p>When booting the server, you are able to access the MegaRAID configuration. As my server came with 2 unregistered drives, it was simple to create a new RAID1 configuration with those two 146Gb drives, creating a virtual 146Gb RAID1 drive.</p>

<p>I ummed and ahhed a bit about whether to use the RAID controller, but it looks like it might be ok kit.</p>

<h3>Install</h3>

<p>I usually use inetbootin to create a USB memory stick with the OS I want to install. In this case, I downloaded the 64bit Ubuntu image and used it to create the bootable USB stick.</p>

<p>Expert install followed.</p>

<h3>Grub2 gotcha 1</h3>

<p>Oh dear, I had a number of failed installs until I asked an expert (@wilbatron) for some help. The grub2 installation in to the MBR kept failing becauseâ€¦ The grub2 installation doesn't fit in the MBR does it? I wish it told me that rather than just failing.</p>

<p>Ah well, got it sorted in the end, here is how I set up my partitions.</p>

<h3>Partition set up</h3>

<p>During the install, do manual partitioning. We'll set up 2 physical partitions, one of which will be a Logical Volume Manager (LVM) Physical Volume (PV)</p>

<h4>Physical</h4>

<p>At this point, the menu will show your USB stick (still mounted) and your 146Gb virtual RAID drive. The Hardware RAID is hiding the fact that you've actually got two hard drives there and the installer just sees one.</p>

<ul>
<li>Select the Raid array - in my case, it was labelled <em>146.0Gb LSI MegaRAID 8708EM2</em></li>
<li>Once selected, create a new empty partition (and table) for this device</li>
<li>Choose GPT as the partition table type (not MSDOS!)</li>
<li>Now select FREE SPACE 146.0GB and create new partition</li>
<li>Set new partition size to be just 10Mb, this is where the installer will put the rest of grub2</li>
<li>Set to be at the beginning of the drive</li>
<li>Set type to be used as <em>Reserved BIOS Boot area</em></li>
<li>Create next partition to use as Physical Volume (PV) for LVM</li>
</ul>


<h4>Logical</h4>

<p>Now we configure the LVM</p>

<ul>
<li>Configure LVM (option at the top of the partitioning page)</li>
<li>When prompted, write partition changes to disk</li>
<li>Create volume group, give it a name and select the PV.</li>
<li>Create logical volume, call it ROOT or whatever, mine was 15Gb - this is where the OS will be installed. You could create all the separate partitions if you like of course.</li>
<li>Create swap volume, I chose 6Gb, although the server has 12Gb of server memory, I didn't want to give it swap of that size. We'll see how we go.</li>
<li>Finish up and head back to partition page</li>
<li>Set root partition to be root (ext4), doesn't need to be bootable partition.</li>
<li>Set swap to be swap</li>
<li>Down to the bottom of the page and write changes to disk</li>
<li>Back to main menu and install!</li>
</ul>


<h4>Installing grub in MBR - gotcha 2</h4>

<p>Just another slight gotcha, if your USB stick is mounted as /dev/sda &amp; your RAID array as /dev/sdb you might have to tell it not to install to the MBA, but instead to where you want it installed, i.e. /dev/sdb</p>

<p>Sorted!</p>

<h3>BMC (Baseboard Managment Controller)set up</h3>

<p>To get the BMC up and running properly, I needed to do a few things, first, is to ensure that it is set up correctly in the BIOS.</p>

<p>Enter the BIOS and in the server management section, ensure it is set to use the correct LAN port, either <em>Dedicated</em> if you are using the single port on the back of the server, <em>On Board</em> for one of the 4 built in LAN ports. I used the latter with DHCP. Make a note of the IP address which is given to the BMC and fire it up in your web browser. All being well, you should see the log in page:</p>

<p><img src="/images/smartconsole.jpg" alt="console" /></p>

<h4>Default authentication log in</h4>

<p>Apparently the default is either admin/admin or ADMIN/ADMIN so give that a go first of all to see if you get in. If not, we will have to do some jiggery pokery on the server.</p>

<h3>Resetting BMC credentials from the server</h3>

<p>The tool, ipmitool is required to access the BMC from the server. I just did apt-get install ipmitool to get it up and running. However, before I got it working properly, I had to load some kernel modules</p>

<h4>Kernel modules for ipmitool</h4>

<p>First, I'd see whether it is working straight after install:</p>

<p><code>
ipmitool sensor
</code></p>

<p>if you get</p>

<p><code>
Could not open device at / dev/ipmi0 or / or dev/ipmi/0 / dev/ipmidev/0: No such file or directory
Get Device ID command failed
Unable to open SDR for reading
</code></p>

<p>Then try manually loading the kernel modules with</p>

<p><code>
modprobe ipmi_devintf
modprobe ipmi_msghandler
modprobe ipmi_poweroff
modprobe ipmi_si
modprobe ipmi_watchdog
</code></p>

<p>You can add these to <code>/etc/modules</code> for permanent loading.</p>

<p>Now try again, you should get some results</p>

<p><code>
ipmitool sensor
</code></p>

<h4>Get correct channel</h4>

<p>By running</p>

<p><code>
ipmitool -I open channel info 1
</code></p>

<p>(where the latter 1 is the channel, so if 1 doesn't work, cycle through)</p>

<p>I got</p>

<p><code>
Channel 0x1 info:
  Channel Medium Type   : 802.3 LAN
  Channel Protocol Type : IPMB-1.0
  Session Support       : multi-session
  Active Session Count  : 0
  Protocol Vendor ID    : 7154
</code></p>

<p>which showed that Channel 1 was the one I needed.</p>

<h4>List users</h4>

<p><code>
ipmitool user list 1
</code></p>

<p>should give you a list of users, then you can reset the passwords. I ended up setting all I could to <em>password</em> then, once I was in the web admin, I deleted the users I didn't need and set all the passwords to be more secure ones!</p>

<h4>Set password</h4>

<p>Hmm, not sure I got this right, but I tried</p>

<p><code>
ipmitool -I open lan set 1 password admin password                                                                                                                         
Password set for user 1
</code>
(the 1 here is the channel)</p>

<p>and</p>

<p><code>
ipmitool user set password 2 password
</code></p>

<p>for the various users until I could log in to the console!</p>
]]></content>
  </entry>
  
</feed>
