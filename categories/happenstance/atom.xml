<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Happenstance | James Jefferies and ShedCode Ltd]]></title>
  <link href="http://jamesjefferies.com/categories/happenstance/atom.xml" rel="self"/>
  <link href="http://jamesjefferies.com/"/>
  <updated>2012-09-26T21:02:53+01:00</updated>
  <id>http://jamesjefferies.com/</id>
  <author>
    <name><![CDATA[James Jefferies]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Happenstance Newspaper]]></title>
    <link href="http://jamesjefferies.com/2012/09/26/happenstance-newspaper/"/>
    <updated>2012-09-26T20:50:00+01:00</updated>
    <id>http://jamesjefferies.com/2012/09/26/happenstance-newspaper</id>
    <content type="html"><![CDATA[<p>Following on from the amazing <a href="http://happenstanceproject.com">Happenstance Project</a> I worked on earlier in the year, we had the final Showcase at Nesta HQ. For the Showcase, <a href="http://finalbullet.com">Leila</a> produced a Happenstance Newspaper, including articles by yours truly! You can download a <a href="http://jamesjefferies.com/Happenstance_2012_Newspaper.pdf">PDF copy of it</a>.</p>

<p>Enjoy!</p>

<p><img src="http://jamesjefferies.com/happenstance_newspaper.jpg" title="Happenstance Newspaper" alt="Newspaper" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Creativity Tap]]></title>
    <link href="http://jamesjefferies.com/2012/09/25/the-creativity-tap/"/>
    <updated>2012-09-25T22:15:00+01:00</updated>
    <id>http://jamesjefferies.com/2012/09/25/the-creativity-tap</id>
    <content type="html"><![CDATA[<h2>The Creativity Tap</h2>

<p>Creativity is just like a tap right? You need to do some thing a bit woo and a bit wah, so you switch on the creativity tap and all these incredible ideas just pour out of your brain. There are two dangers though if you use the creativity tap.</p>

<p>One is that if you leave that tap switched off for a while, then all the creativity gets stored up in your brain, without an outlet until... Pop! One day it’s gone, those ideas had to go somewhere, so they leaked out, usually somewhere behind your ear, hopefully picked up by someone else. You have writers block, coders deadlock, songwriters... err, song block. Oh dear</p>

<p>The other danger is that you leave that tap switched on all the time until your brain empties. This too is a bad idea, sure, you’ve made some room in your noddle for new things, but you need a few left in there, to keep the ideas factory ticking over. Oh double dear...</p>

<h2>Writing Songs</h2>

<p>Knowing people who are songwriters, I get the privilege of seeing songs appear, until they end up being recorded and performed, or they mutate into a different song, or they end up on the shelf, maybe for another day. I’m sure not every songwriter works like this, but those I know have to <em>work</em> at honing a song. They rarely appear fully formed but they often appear when there is space in their lives to switch on the creativity tap for a bit to see what happens.</p>

<p>If they don’t have the chance to get the songs <em>out</em>, into the open, then you can see how those song ideas start to play merry hell. The frustration builds, no time for the songs, too busy having to do other stuff. It’s almost a physical pain, the song <em>has</em> to be brought to life. There is a creative imperative which must be fulfilled.</p>

<h2>Writing Code</h2>

<p>Fortunately, for us software engineers, coders, developers, tapping at our keyboards day by day, telling the computer what to do and when to do it, we don’t need the creativity tap. We get stuck? We ask a search engine. We need to do something from scratch? Well, <em>someone</em> will have done something like it, we just need to find it and copy them. We need another pair of eyes? Well, ask a colleague. It’s all there for us, if we use a clever framework or development environment, it’ll probably autocomplete what we’re thinking too. We are coding machines..</p>

<p>Or are we? Having spent many years writing code, I started to realise that when I was mechanistic in what I was doing, I became frustrated that I wasn’t able to come up with new ideas or ways of doing things. I was constrained by getting this piece of work finished in as short a period of time that was possible. No time to switch on the creativity tap, just <em>get it done</em>.</p>

<p>The big problem is when you work for someone else, you can find yourself under a lot of pressure to crank the sausage machine handle rather than think things through. I worked with an engineer once, who would deliberately stop what he was doing and just <em>think</em>. Rather than thrashing through a jungle of code... stop first and think. It worked too, giving a bit of time to turn on the creativity tap to see what happened.</p>

<p>I struggled in my day to day job, so I tried to make time in the evenings and the weekends. But you’re so tired then that switching on the creativity tap just floods you with ideas which you don’t have the energy to either make note of or do anything with. Like the frustrated songwriter I would feel the pain of not learning new skills, not playing with languages and technology. Not actually chuffing making anything which made you say, even if it is just to yourself “I made that and I’m pleased with what I’ve done”.</p>

<p>So, what can be done?</p>

<p>Well one answer, in the workplace, where people have a pressurised, day to day job and a boss, is for the bosses to give people time when they have the headspace to play. With their work, with something new, with wooden blocks, with a great idea they’ve had. Not only do they get chance to switch on the creativity tap, but usually it knocks on in to their ‘day to day’ work too. Wins all around.</p>

<p>If you are your own boss, then plan in time where you put down the work you’re doing for clients or your startup and have a play. You never know what amazing ideas might come to life!</p>

<p>Disclaimer - the creativity tap premise is a load of nonsense, if only it was a tap we could switch on and off!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Before you buy a Berg Little Printer...]]></title>
    <link href="http://jamesjefferies.com/2012/08/14/before-you-buy-a-berg-little-printer-dot-dot-dot/"/>
    <updated>2012-08-14T19:56:00+01:00</updated>
    <id>http://jamesjefferies.com/2012/08/14/before-you-buy-a-berg-little-printer-dot-dot-dot</id>
    <content type="html"><![CDATA[<p>You may have heard today that <a href="http://bergcloud.com/littleprinter/">BERG's Little Printer</a> is now available for pre-order. It does look like a great bit of kit &amp; the ability to produce your own content should produce some interesting rolls of paper!</p>

<p>Anyways, before you splash out with your hard earned £199 + P&amp;P you should, you <em>really</em> should have a look at <a href="http://gofreerange.com/printer">Go free range's Open Source printer</a>.</p>

<p>Not only are they cheaper than the Little Printer, but being Open Source &amp; built using Rails &amp; Arduino, you can get stuck in to the source code, make changes yourself and create some interesting content.</p>

<p>As part of the <a href="http://happenstanceproject.com">Happenstance Project</a> we were fortunate to borrow a couple of Go free range's printers and start experimenting. We hooked them up with <a href="http://twilio.com">Twilio</a> and a bit of ruby magic to get them recieving SMS messages. Each printer (Cathy &amp; Heathcliff) had their own phone numbers, when they recieved the message, they printed it out &amp; sent the contents to their twitter feeds.</p>

<p>You can read more on this blog <a href="http://jamesjefferies.com/2012/05/04/week-3-cathy-heathcliffs-amazing-adventures/">elsewhere</a> or you can watch our <a href="http://tedxtalks.ted.com/video/TEDxSheffield-2012-Leila-Johnst">TEDx</a> talk on the project as a whole.</p>

<p>So, buy all means pre-order a Little Printer, but have a think about getting the super duper Go Free Ranger printer first!</p>

<p><img src="http://25.media.tumblr.com/tumblr_m4uf1acC5R1rvn0edo1_500.jpg" title="Cathy Long Cat" alt="Cathy long cat" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Week 10 - the end of the Happenstance]]></title>
    <link href="http://jamesjefferies.com/2012/06/22/week-10-the-end-of-the-happenstance/"/>
    <updated>2012-06-22T18:16:55+01:00</updated>
    <id>http://jamesjefferies.com/2012/06/22/week-10-the-end-of-the-happenstance</id>
    <content type="html"><![CDATA[<p>At our Open House yesterday we had an 'In conversation' kind of thing with our mentor <a href="http://twitter.com/jamesb">James Boardwell</a> and what we thought would be a chat for 30 minutes or so, ended up being nearer to 2 hours! I knew we could talk about the last 10 weeks of Happenstance, that we had ideas and theories about what happened and why, but I hadn't anticipated there being so much to talk about... in front of an audience!</p>

<p>When I went freelance last summer and set up my company, ShedCode, I was planning on doing some client work and in between, hopefully working on some of my own ideas to see what would happen. In the end I did 99% client work and was planning, at some point, to pause and work on my stuff.</p>

<p>That's when Happenstance came along and it is fair to say that I thought at the beginning that Happenstance may have been a pleasant and interesting detour for my career as a Software Engineer/Developer and Techie. Instead of returning back to the path I was treading before Happenstance, I've finished the project on what feels like a completely different path, going who knows where!</p>

<p>Helping an arts organisation learn new things, to be inspiring and to fix stuff is what I thought would happen. We did some of that, but also I learnt what a Technologist could be, that we could make things, real things with lives of their own which will live on after the project has finished. I've met new people, made friends and found out about interesting things. An interest in electronics has been rekindled, thanks to arduinos and I've started to pick up some Ruby and a bit of Rails. Speaking at Future Everything, TedX Sheffield and at the Open Houses has given me some confidence in public speaking.</p>

<p>People have been so encouraging! Thanks to all who have had kind words to say, shared their knowledge, wisdom, contacts, experience, advice, tea and biscuits. Thanks too to those at <a href="http://sitegallery.org">Site</a> who have been incredibly open, helpful and friendly during the project, I've really appreciated it. Special thanks of course go to my co-resident, <a href="http://finalbullet.com">Leila</a>, who has put up with some of my more, er, random ideas, given me confidence to do stuff, been a great sounding board, co-speaker and partner in crime. She's been so generous to me and I think we've been a great team (even if I say so myself!). I hope we can work together on more stuff soon!</p>

<p>I wrote a couple of blog posts about what to do next, both for me in <a href="http://jamesjefferies.com/2012/05/31/whatever-next/">general</a> and <a href="http://jamesjefferies.com/2012/06/15/whatever-next-the-technical-stuff/">technically</a> and really it's a work in progress. We've got debrief next week, then I'm on holiday for a couple of weeks. I think I really need a break, but I don't want to lose the momentum I've built up during Happenstance. So, those who've become my friends over the last 10 weeks and those who've known me for ages, don't let me slip in to old habits and ways &amp; please bear with me as I bounce ideas around like fleas on space hoppers. I hope that life post-Happenstance is going to get even more interesting!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Whatever next - the technical stuff]]></title>
    <link href="http://jamesjefferies.com/2012/06/15/whatever-next-the-technical-stuff/"/>
    <updated>2012-06-15T12:51:02+01:00</updated>
    <id>http://jamesjefferies.com/2012/06/15/whatever-next-the-technical-stuff</id>
    <content type="html"><![CDATA[<p>In recent years my main programming language has been Java, sprinkled with a bit of the usual korn/zsh scrips, SQL, HTML, JavaScript and other gubbins. The world of Java is rich with libraries, web frameworks, platforms and alternate languages. I've invested a lot of time in this ecosystem, knowing which tools are useful for which problems, gained expertise in various web frameworks, development environments and platforms, generally to be as productive as I've ever been.</p>

<p>For the last couple of years though, I've been pondering whether to stick with what I know, or to spend time learning some new stuff. It is fair to say that I'm not a natural polyglot. I like to spend decent time getting to know a language and it's ecosystem and I find it can be tricky switching.</p>

<h3>Grails &amp; Groovy</h3>

<p>At first I spent a bit of time, starting to get to know <a href="http://grails.org">Grails</a>, basically using <a href="http://groovy.codehaus.org/">Groovy</a> on the JVM (Java Virtual Machine) to build a Rails like web framework. The rest of the Grails stack is also stuff which I know very well, Spring, Hibernate etc. There is a lot I like about Grails and I've yet to investigate all this is new in the latest 2.0 release.</p>

<p>So, there you go, something I'd like, building upon a lot which I already know. Should be the favourite right?</p>

<h3>Scala &amp; Play/Lift</h3>

<p>Well, I then started thinking a bit about <a href="http://www.scala-lang.org/">Scala</a>, a language which polarises opinion, especially amongst the Java community. It is either the 'new' Java or it is a hodge podge of static typed semi functional programming. People complain about it's complexity or love how doing things in a more functional fashion reduces code and maintenance and gets it all set up for multi-core CPUs. If I was planning on doing more 'corporate' work, working on huge projects in London or building a twitter competitor then it'd make sense for me to have a good look at Scala.</p>

<p>But I'm not, maybe ShedCode will work on an idea which will one day be huge, I think I'll worry about that another time!</p>

<h3>Clojure</h3>

<p>I'd also like to learn <a href="http://clojure.org/">Clojure</a>, mainly because I think it will be good for my programming skills and good for my brain.</p>

<h3>Rails &amp; Ruby</h3>

<p>Then, working on <a href="http://happenstanceproject.com">Happenstance</a> has made me think again...</p>

<p>In early 2008 I was going to investigate <a href="http://rubyonrails.org/">Rails</a> &amp; Ruby, one because I liked the fact it was called Rails, but then also because it seemed to be gaining a lot of momentum and interest and it was 'cool'. In the end I got a job doing java, so I put it on the back burner. I also started to realise that, as is often the case where things are a bit 'cool' there were quite a few.. ahem.. nobbers around who not only believed that Rails was THE framework to use but that using anything else was such a POOR substitute. I have to be honest, it did my nut. I did meet a few people who seemed ok, but the majority, I didn't really get on with.</p>

<p>Now I find that a lot of the R&amp;D web apps I'm interested in, have been built with Rails. I've also met some more Rails devs who are not nobbers, in fact, they are interesting, helpful, open minded people. I'd like to work with some of them, I'd like to build things on top of the work they've done. I'd like to explore the Rails ecosystem which has inspired so much in other languages (like Grails for example).</p>

<h3>Client Side</h3>

<p>Even though over the last few weeks, I've been thinking more about whether the classic server side MVC web framework is what I should be looking at all. There is a significant trend for using client side JavaScript frameworks for doing a lot of the hardwork in the browser, whilst having a more simple RESTful service/API set up on the server. Examples would be <a href="http://documentcloud.github.com/backbone/">Backbone.js</a>, <a href="http://emberjs.com/">Ember.js</a>, <a href="http://knockoutjs.com/">Knockout.js</a> etc. This somehow feels like a good idea, but I'm not great with JavaScript and I'm not sure this is what I want to do just yet. Obviously improving my JavaScript knowledge would be useful regardless!</p>

<h3>Crossroads</h3>

<p>So, I find myself at a crossroads. I'll spend some time with Clojure, regardless of what else I do, but I've got some interesting projects to start in the next month or so and I need to decide whether I:</p>

<ol>
<li><p>Learn Rails and see what happens...</p></li>
<li><p>Go with what I know a bit and build something with Grails. I know the tools, I know the libraries and I know it works (mainly)</p></li>
<li><p>Client side JavaScript stuff</p></li>
<li><p>Go with Scala, build on top of the Java I know and become have decent with functional languages</p></li>
</ol>


<p>At the moment, these are in my preferred order, but I'll let you know what happens...</p>
]]></content>
  </entry>
  
</feed>
