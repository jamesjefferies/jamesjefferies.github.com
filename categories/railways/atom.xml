<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Railways | James Jefferies and ShedCode Ltd]]></title>
  <link href="http://jamesjefferies.com/categories/railways/atom.xml" rel="self"/>
  <link href="http://jamesjefferies.com/"/>
  <updated>2012-11-27T17:04:41+00:00</updated>
  <id>http://jamesjefferies.com/</id>
  <author>
    <name><![CDATA[James Jefferies]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[A great idea for Amazon deliveries]]></title>
    <link href="http://jamesjefferies.com/2012/10/28/a-great-idea-for-amazon-deliveries/"/>
    <updated>2012-10-28T15:14:00+00:00</updated>
    <id>http://jamesjefferies.com/2012/10/28/a-great-idea-for-amazon-deliveries</id>
    <content type="html"><![CDATA[<h2>Amazon Pickup Lockers</h2>

<p>This year, Amazon launched it's Pick up lockers and Collection locations. A great idea for a mail order company, providing delivery alternatives for customers so they don't have to put up with the, <a href="http://www.guardian.co.uk/money/2012/aug/24/amazon-complaints-yodel-delivery-service">generally awful</a>, parcel delivery services. Having had parcels left outside houses and in rubbish bins, it's good to know you can collect, at your convenience from a location you have chosen.</p>

<h2>The Oxford - Cambridge Railway</h2>

<p>Then, the other weekend, I was on a railway line I'd never been on before, the Bletchley to Bedford line, which joins the West Coast Main Line, to the Midland Main Line, serving lots of small stations on route. A lot of work has been done on the infrastructure recently, as <a href="http://www.railfuture.org.uk/ox-cam/">services get extended</a> from Bletchley towards Oxford, and hopefully one day, back towards Cambridge. The line will also be electrified as part of the <a href="http://jamesjefferies.com/2012/07/16/the-electrified-spine-and-the-rest-of-the-news/">'electric spine'</a>.</p>

<h2>How about...</h2>

<p>About half way along this route, is a massive Amazon warehouse. Although it is next to the railway line, it isn't rail served, there are no sidings set up for transferring goods. It got me thinking though, if local and major railway stations had Amazon pick up lockers, then they could be rail served in a really efficient way. Of course there would be infrastructure costs, getting Amazon warehouses linked up, but once that was done, a really efficient way of delivering goods.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Scenic Railways - our railway hack]]></title>
    <link href="http://jamesjefferies.com/2012/10/16/scenic-railways-our-railway-hack/"/>
    <updated>2012-10-16T16:22:00+01:00</updated>
    <id>http://jamesjefferies.com/2012/10/16/scenic-railways-our-railway-hack</id>
    <content type="html"><![CDATA[<p><img src="/images/scenic-railways.png" alt="screen shot of application" /></p>

<p>Thanks to the <a href="/2012/10/16/railway-hackday-off-the-rails/">Off The Rails</a> hackday, I was able to team up with some fellow software engineers to build something in a day. Our team consisted of <a href="http://twitter.com/frankieroberto">Frankie Roberto</a>, <a href="http://twitter.com/jnicho02">Jez Nicholson</a>, and <a href="http://twitter.com/joooe">Joe Hughes</a>. Frankie had had the idea for building an application which would show sights of interest visible from the train route, indicating rough placements and which side of the train to look on. I knew Frankie from Sheffield, Frankie had worked with Jez before on a previous hackday and Joe was interested in what we were doing, our team was formed!</p>

<p>Interestingly, during the 'speed dating' section at the beginning of the day, when we chatted to other people about their ideas and what they were thinking of building, one chap, whose name I think was Phil, was thinking about Railway iSpy, which sounds pretty similar to what we actually built (without Big Chief i-Spy though!). Our application also bears an uncanny similiarity to the Peppa Pig episode <a href="http://www.youtube.com/watch?v=Htl6NYcBE-k">The Train Ride!</a></p>

<p>After some discussion on ideas, scope, implementation and the <a href="http://www.railperf.org.uk/">Railway Performance Society</a> we started building a Rails web application and an iOS app. Although I know a lot about railways, I'm still in the early days of learning Rails and iOS, so the patience of Jez and Frankie whilst building <a href="http://www.scenicrailways.org.uk">Scenic Railways</a> was much appreciated. So whilst the three of us built the web application, Joe got cracking with building an iOS application.</p>

<p><img src="/images/scenic-railways-on-iphone.png" alt="ios-1" /></p>

<p>We got an initial version built in the time we had (from about 11am until 7pm) before the presentations were due to start. I worked on a bit of map integration using <a href="http://leaflet.cloudmade.com">leaflet.js</a> whilst Jez and Frankie implemented the main structure.</p>

<p>Although the version we finished was relatively basic, there are some nice features, the best one being that the sides to look out of the window on, reverse depending on direction of travel!  It could easily be extended in the future to add extra routes and extra points of interest (POIs). Joe had some ideas on making the iOS app competitive, by providing incentives for people to take photos of the points from the train!</p>

<p><img src="/images/scenic-railways-1.png" alt="screen shot of application" /></p>

<p>So, feel free to have a look at the site <a href="http://www.scenicrailways.org.uk">Scenic Railways</a> and you can even checkout the code from <a href="https://github.com/frankieroberto/scenic-railways">github</a> and laugh at my Rails code (or lack of it!).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Railway Hackday - Off The Rails]]></title>
    <link href="http://jamesjefferies.com/2012/10/16/railway-hackday-off-the-rails/"/>
    <updated>2012-10-16T15:12:00+01:00</updated>
    <id>http://jamesjefferies.com/2012/10/16/railway-hackday-off-the-rails</id>
    <content type="html"><![CDATA[<p><img src="/images/off_the_rails_sponsors1.png" title="Off The Rails" alt="off the rails image" /></p>

<p>After being Technologist in Residence at <a href="http://sitegallery.org">Site Gallery</a> earlier in the year, as part of the <a href="http://happenstanceproject.com">Happenstance Project</a> I started to think of some ideas I wanted to follow for later in 2012.</p>

<h2>Hackday</h2>

<p>One of those ideas was to run a <a href="http://rewiredstate.org/hack-days">Hackday</a>, but not any old Hackday, one centred around Railways. Network Rail had just opened up their realtime <a href="http://datafeeds.networkrail.co.uk">Datafeeds</a> and as far as I knew, no one else had ever run one. Sure, there had been Transport Hackdays, but not Railway specific ones.</p>

<h2>First steps</h2>

<p>So I got to work, I went to experience a 24 hour hackday for myself, where I discovered that sometimes technical issues with the building can really slow people's progress and that working overnight doesn't really suit me anymore!</p>

<h2>Clickerty Hack</h2>

<p>I also bought a domain and registered a Twitter account. The hackday would be called Clickerty Hack. Then, having a good read of <a href="http://hackdaymanifesto.com/">The Hackday Manifesto</a> made me realise that a lot of work was required to get a decent Hackday up and running.</p>

<h2>Loco 2 and Off The Rails</h2>

<p>It was then that I found out about somebody else's plans for a Railway Hackday, <a href="http://loco2.com">loco2</a> was a company I was already watching with interest. A startup based around European Train travel, ticketing and guides.</p>

<p>Their hackday, Off the Rails, was in a more advanced state than Clickerty Hack, so putting it on hold, I volunteered to help.</p>

<h2>ShedCode Sponsorship</h2>

<p>It was a real privilege to be able to help with a small part of the organising and for my company <a href="http://shedcode.co.uk">ShedCode</a> to be one of the sponsors, providing some of the food for the masses!</p>

<h2>Meeting the experts</h2>

<p>During 2012, I'd found a number of people who had built some incredible pieces of software using Railway data, especially <a href="http://twitter.com/poggs">Peter Hicks</a> and <a href="http://twitter.com/swlines">Tom Cairns</a> who built, amongst other things <a href="http://www.opentraintimes.com/">Open Train Times</a> and <a href="http://traintimes.im">Train Times</a> respectively. So it was brilliant to meet them in person at Off The Rails. There were also many other people knowledgeable about Railways, Open Data and Mapping - I could have spent all day just talking to people!</p>

<h2>The teams</h2>

<p>During the day, the teams built some inspiring things, including an application which builds spotify playlists to match the length of your train journey and many others. Most of them will hopefully be available at some point on github for perusal.</p>

<h2>Thanks</h2>

<p>All in all, a fantastic day, thanks to <a href="http://loco2.com">Loco2</a> and <a href="http://bethnalgreenventures.com">Bethnal Green Ventures</a> and here's to the next Railway Hackday, whether it's Off The Rails 2, or Clickerty Hack! With cake too of course ;)</p>

<p><img src="/images/cake.jpg" title="Cake" alt="off the rails cake" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Parse Train Describer CSV Data]]></title>
    <link href="http://jamesjefferies.com/2012/08/16/parse-train-describer-csv-data/"/>
    <updated>2012-08-16T12:35:00+01:00</updated>
    <id>http://jamesjefferies.com/2012/08/16/parse-train-describer-csv-data</id>
    <content type="html"><![CDATA[<p>If you are using the Network Rail Open Data Feeds, then hopefully you've had a look at the fantastic <a href="http://wiki.openraildata.info/index.php/TD_Berth_Steps">wiki</a> started by <a href="http://twitter.com/poggs">poggs</a>.</p>

<p>In the reference data section, it provides a link to a CSV file which poggs is sharing containing Train Describer berths.</p>

<p>I wanted to parse that data using a simple ruby script and get it in to my mongo database.</p>

<p>You can use the mongoimport program to pull in the CSV by adding a header file, or you can use this little ruby script I wrote (with a <em>lot</em> of help from this <a href="http://www.dzone.com/snippets/turn-csv-headers-array-hashes">snippet</a>) which converts to JSON and inserts it in to the mongo db.</p>

<p><div><script src='https://gist.github.com/3369575.js?file='></script>
<noscript><pre><code>require 'csv'
require 'json'
require 'mongo'
=begin

Info from http://http://wiki.openraildata.info/index.php/TD_Berth_Steps

# Example header
# td_area,step_type,from_berth,to_berth,stanox,stanme,event,platform,line,trust_berth_offset,route,line,description

# Example data
AD,B,0632,0630,89321,PLUCKLY,A,1,,24,,,08-05-2012
=end

FILENAME=&quot;BerthStepsFile.csv&quot;

# You might want to change this, easily done
HEADER = ['td_area','step_type','from_berth','to_berth','stanox','stanme','event','platform','line','trust_berth_offset','route','line','description']

csv_data = CSV.read FILENAME

headers = HEADER.map {|i| i.to_s }
string_data = csv_data.map {|row| row.map {|cell| cell.to_s } }
array_of_hashes = string_data.map {|row| Hash[*headers.zip(row).flatten] }

# Assume mongo database is called rail (or it will create one if it doesn't exist)
db = Mongo::Connection.new.db(&quot;rail&quot;)

# Create/use collection called berthsteps
coll = db.collection(&quot;berthsteps&quot;)

array_of_hashes.each do |td|

  # Sanity check debug, output each td message as nice looking JSON 
  #puts JSON.pretty_generate(td)   

  # insert into collection and return with the id 
  id = coll.insert(td)

end</code></pre></noscript></div>
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Importing Network Rail Train Movement feeds into MongoDB]]></title>
    <link href="http://jamesjefferies.com/2012/08/07/importing-network-rail-train-movement-feeds-into-mongodb/"/>
    <updated>2012-08-07T14:33:00+01:00</updated>
    <id>http://jamesjefferies.com/2012/08/07/importing-network-rail-train-movement-feeds-into-mongodb</id>
    <content type="html"><![CDATA[<h2>Network Rail datafeeds?</h2>

<p>Ah yes, please my previous <a href="http://jamesjefferies.com/2012/07/04/getting-started-with-network-rails-datafeeds/">blog</a> post for further info, apologies for the lack of updates on here, I've been away, sent round the loop line.</p>

<h2>Why MongoDB?</h2>

<p><a href="http://www.mongodb.org/">MongoDB</a> is a scalable, high-performance, open source, NoSQL database. I thought it would make a good fit for the train movement feeds as it's storage is oriented towards JSON-style documents. It's JSON-style because it actually uses <a href="http://bsonspec.org/">binary-encoded serialisation</a> behind the scenes.</p>

<p>There is a nice little interactive tutorial on the MongoDB home page to get you in to the swing of things.</p>

<h2>Getting Mongo installed on OS X</h2>

<p>I use <a href="http://mxcl.github.com/homebrew/">Homebrew</a> for installing packaged stuff on to my Mac, if you use it, then you can easily install it with</p>

<p><code>
brew install mongodb
</code></p>

<h2>What do you need for Ruby Mongo Magic?</h2>

<p>There is a standard Mongo driver available, which you can install using gem
<code>
gem install mongo
</code>
but it is also worth installing the C compiled extension to speed up any BSON serialisation
<code>
gem install bson_ext
</code></p>

<p>More info can be found on the <a href="http://www.mongodb.org/display/DOCS/Ruby+Language+Center">official pages</a></p>

<h2>Code example?</h2>

<p>Here you go, proper version in the <a href="https://github.com/jamesjefferies/national-rail-datafeeds-ruby-examples">github repository</a></p>

<p><div><script src='https://gist.github.com/3285558.js?file='></script>
<noscript><pre><code>require 'rubygems' 
require 'stomp'
require 'json'
require 'mongo'

begin
  # Credentials set here as environment variables
  @user = ENV[&quot;DATAFEEDS_USER&quot;]; 
  @password = ENV[&quot;DATAFEEDS_PASSWORD&quot;]
  @host = &quot;datafeeds.networkrail.co.uk&quot;
  @port = 61618

  # Example destination add yours here
  @destination = &quot;/topic/TRAIN_MVT_ALL_TOC&quot;

  puts &quot;Connecting to datafeeds as #{@user} using stomp protocol stomp://#{@host}:#{@port}\n&quot; 
  @connection = Stomp::Connection.open @user, @password, @host, @port, true 
  @connection.subscribe @destination 

  while true
    @msg = @connection.receive

    # Use JSON library to parse the messge body
    message_body = JSON.parse(@msg.body)

    db = Mongo::Connection.new.db(&quot;rail&quot;)
    coll = db.collection(&quot;td&quot;)

    message_body.each do |td| 

      # Sanity check debug, output each td message as nice looking JSON 
      # puts JSON.pretty_generate(td)   
      
      # insert into collection
      id = coll.insert(td)

    end
  end 

  @connection.disconnect
rescue 
end</code></pre></noscript></div>
</p>

<h2>Examples of querying Mongo</h2>

<p>There are lots of good examples and resources for using Mongo, but just a couple of examples related to the schema I've used in the example. You can fire up the interactive Mongo console and try the following (once you have some data!)</p>

<p>To retrieve all Departure events</p>

<p><code>
db.td.find({ "body.event_type" : "DEPARTURE" })
</code></p>

<p>To retrieve 10 (using limit) Train Movement (type 3) messages</p>

<p><code>
db.td.find({ "header.msg_type" : "0003" }).limit(10)
</code></p>
]]></content>
  </entry>
  
</feed>
