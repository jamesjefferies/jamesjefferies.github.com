<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Railways | James Jefferies and ShedCode Ltd]]></title>
  <link href="http://jamesjefferies.com/categories/railways/atom.xml" rel="self"/>
  <link href="http://jamesjefferies.com/"/>
  <updated>2012-10-16T21:14:31+01:00</updated>
  <id>http://jamesjefferies.com/</id>
  <author>
    <name><![CDATA[James Jefferies]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Railway Hackday - Off The Rails]]></title>
    <link href="http://jamesjefferies.com/2012/10/16/railway-hackday-off-the-rails/"/>
    <updated>2012-10-16T15:12:00+01:00</updated>
    <id>http://jamesjefferies.com/2012/10/16/railway-hackday-off-the-rails</id>
    <content type="html"><![CDATA[<p><img src="/images/off_the_rails_sponsors1.png" title="Off The Rails" alt="off the rails image" /></p>

<p>After being Technologist in Residence at <a href="http://sitegallery.org">Site Gallery</a> earlier in the year, as part of the <a href="http://happenstanceproject.com">Happenstance Project</a> I started to think of some ideas I wanted to follow for later in 2012.</p>

<h2>Hackday</h2>

<p>One of those ideas was to run a <a href="http://rewiredstate.org/hack-days">Hackday</a>, but not any old Hackday, one centred around Railways. Network Rail had just opened up their realtime <a href="http://datafeeds.networkrail.co.uk">Datafeeds</a> and as far as I knew, no one else had ever run one. Sure, there had been Transport Hackdays, but not Railway specific ones.</p>

<h2>First steps</h2>

<p>So I got to work, I went to experience a 24 hour hackday for myself, where I discovered that sometimes technical issues with the building can really slow people's progress and that working overnight doesn't really suit me anymore!</p>

<h2>Clickerty Hack</h2>

<p>I also bought a domain and registered a Twitter account. The hackday would be called Clickerty Hack. Then, having a good read of <a href="http://hackdaymanifesto.com/">The Hackday Manifesto</a> made me realise that a lot of work was required to get a decent Hackday up and running.</p>

<h2>Loco 2 and Off The Rails</h2>

<p>It was then that I found out about somebody else's plans for a Railway Hackday, <a href="http://loco2.com">loco2</a> was a company I was already watching with interest. A startup based around European Train travel, ticketing and guides.</p>

<p>Their hackday, Off the Rails, was in a more advanced state than Clickerty Hack, so putting it on hold, I volunteered to help.</p>

<h2>ShedCode Sponsorship</h2>

<p>It was a real privilege to be able to help with a small part of the organising and for my company <a href="http://shedcode.co.uk">ShedCode</a> to be one of the sponsors, providing some of the food for the masses!</p>

<h2>Meeting the experts</h2>

<p>During 2012, I'd found a number of people who had built some incredible pieces of software using Railway data, especially <a href="http://twitter.com/poggs">Peter Hicks</a> and <a href="http://twitter.com/swlines">Tom Cairns</a> who built, amongst other things <a href="http://www.opentraintimes.com/">Open Train Times</a> and <a href="http://traintimes.im">Train Times</a> respectively. So it was brilliant to meet them in person at Off The Rails. There were also many other people knowledgeable about Railways, Open Data and Mapping - I could have spent all day just talking to people!</p>

<h2>The teams</h2>

<p>During the day, the teams built some inspiring things, including an application which builds spotify playlists to match the length of your train journey and many others. Most of them will hopefully be available at some point on github for perusal.</p>

<h2>Thanks</h2>

<p>All in all, a fantastic day, thanks to <a href="http://loco2.com">Loco2</a> and <a href="http://bethnalgreenventures.com">Bethnal Green Ventures</a> and here's to the next Railway Hackday, whether it's Off The Rails 2, or Clickerty Hack! With cake too of course ;)</p>

<p><img src="/images/cake.jpg" title="Cake" alt="off the rails cake" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Parse Train Describer CSV Data]]></title>
    <link href="http://jamesjefferies.com/2012/08/16/parse-train-describer-csv-data/"/>
    <updated>2012-08-16T12:35:00+01:00</updated>
    <id>http://jamesjefferies.com/2012/08/16/parse-train-describer-csv-data</id>
    <content type="html"><![CDATA[<p>If you are using the Network Rail Open Data Feeds, then hopefully you've had a look at the fantastic <a href="http://wiki.openraildata.info/index.php/TD_Berth_Steps">wiki</a> started by <a href="http://twitter.com/poggs">poggs</a>.</p>

<p>In the reference data section, it provides a link to a CSV file which poggs is sharing containing Train Describer berths.</p>

<p>I wanted to parse that data using a simple ruby script and get it in to my mongo database.</p>

<p>You can use the mongoimport program to pull in the CSV by adding a header file, or you can use this little ruby script I wrote (with a <em>lot</em> of help from this <a href="http://www.dzone.com/snippets/turn-csv-headers-array-hashes">snippet</a>) which converts to JSON and inserts it in to the mongo db.</p>

<p><div><script src='https://gist.github.com/3369575.js?file='></script>
<noscript><pre><code>require 'csv'
require 'json'
require 'mongo'
=begin

Info from http://http://wiki.openraildata.info/index.php/TD_Berth_Steps

# Example header
# td_area,step_type,from_berth,to_berth,stanox,stanme,event,platform,line,trust_berth_offset,route,line,description

# Example data
AD,B,0632,0630,89321,PLUCKLY,A,1,,24,,,08-05-2012
=end

FILENAME=&quot;BerthStepsFile.csv&quot;

# You might want to change this, easily done
HEADER = ['td_area','step_type','from_berth','to_berth','stanox','stanme','event','platform','line','trust_berth_offset','route','line','description']

csv_data = CSV.read FILENAME

headers = HEADER.map {|i| i.to_s }
string_data = csv_data.map {|row| row.map {|cell| cell.to_s } }
array_of_hashes = string_data.map {|row| Hash[*headers.zip(row).flatten] }

# Assume mongo database is called rail (or it will create one if it doesn't exist)
db = Mongo::Connection.new.db(&quot;rail&quot;)

# Create/use collection called berthsteps
coll = db.collection(&quot;berthsteps&quot;)

array_of_hashes.each do |td|

  # Sanity check debug, output each td message as nice looking JSON 
  #puts JSON.pretty_generate(td)   

  # insert into collection and return with the id 
  id = coll.insert(td)

end</code></pre></noscript></div>
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Importing Network Rail Train Movement feeds into MongoDB]]></title>
    <link href="http://jamesjefferies.com/2012/08/07/importing-network-rail-train-movement-feeds-into-mongodb/"/>
    <updated>2012-08-07T14:33:00+01:00</updated>
    <id>http://jamesjefferies.com/2012/08/07/importing-network-rail-train-movement-feeds-into-mongodb</id>
    <content type="html"><![CDATA[<h2>Network Rail datafeeds?</h2>

<p>Ah yes, please my previous <a href="http://jamesjefferies.com/2012/07/04/getting-started-with-network-rails-datafeeds/">blog</a> post for further info, apologies for the lack of updates on here, I've been away, sent round the loop line.</p>

<h2>Why MongoDB?</h2>

<p><a href="http://www.mongodb.org/">MongoDB</a> is a scalable, high-performance, open source, NoSQL database. I thought it would make a good fit for the train movement feeds as it's storage is oriented towards JSON-style documents. It's JSON-style because it actually uses <a href="http://bsonspec.org/">binary-encoded serialisation</a> behind the scenes.</p>

<p>There is a nice little interactive tutorial on the MongoDB home page to get you in to the swing of things.</p>

<h2>Getting Mongo installed on OS X</h2>

<p>I use <a href="http://mxcl.github.com/homebrew/">Homebrew</a> for installing packaged stuff on to my Mac, if you use it, then you can easily install it with</p>

<p><code>
brew install mongodb
</code></p>

<h2>What do you need for Ruby Mongo Magic?</h2>

<p>There is a standard Mongo driver available, which you can install using gem
<code>
gem install mongo
</code>
but it is also worth installing the C compiled extension to speed up any BSON serialisation
<code>
gem install bson_ext
</code></p>

<p>More info can be found on the <a href="http://www.mongodb.org/display/DOCS/Ruby+Language+Center">official pages</a></p>

<h2>Code example?</h2>

<p>Here you go, proper version in the <a href="https://github.com/jamesjefferies/national-rail-datafeeds-ruby-examples">github repository</a></p>

<p><div><script src='https://gist.github.com/3285558.js?file='></script>
<noscript><pre><code>require 'rubygems' 
require 'stomp'
require 'json'
require 'mongo'

begin
  # Credentials set here as environment variables
  @user = ENV[&quot;DATAFEEDS_USER&quot;]; 
  @password = ENV[&quot;DATAFEEDS_PASSWORD&quot;]
  @host = &quot;datafeeds.networkrail.co.uk&quot;
  @port = 61618

  # Example destination add yours here
  @destination = &quot;/topic/TRAIN_MVT_ALL_TOC&quot;

  puts &quot;Connecting to datafeeds as #{@user} using stomp protocol stomp://#{@host}:#{@port}\n&quot; 
  @connection = Stomp::Connection.open @user, @password, @host, @port, true 
  @connection.subscribe @destination 

  while true
    @msg = @connection.receive

    # Use JSON library to parse the messge body
    message_body = JSON.parse(@msg.body)

    db = Mongo::Connection.new.db(&quot;rail&quot;)
    coll = db.collection(&quot;td&quot;)

    message_body.each do |td| 

      # Sanity check debug, output each td message as nice looking JSON 
      # puts JSON.pretty_generate(td)   
      
      # insert into collection
      id = coll.insert(td)

    end
  end 

  @connection.disconnect
rescue 
end</code></pre></noscript></div>
</p>

<h2>Examples of querying Mongo</h2>

<p>There are lots of good examples and resources for using Mongo, but just a couple of examples related to the schema I've used in the example. You can fire up the interactive Mongo console and try the following (once you have some data!)</p>

<p>To retrieve all Departure events</p>

<p><code>
db.td.find({ "body.event_type" : "DEPARTURE" })
</code></p>

<p>To retrieve 10 (using limit) Train Movement (type 3) messages</p>

<p><code>
db.td.find({ "header.msg_type" : "0003" }).limit(10)
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Downloading the Network Rail Schedules]]></title>
    <link href="http://jamesjefferies.com/2012/07/18/downloading-the-network-rail-schedules/"/>
    <updated>2012-07-18T17:43:39+01:00</updated>
    <id>http://jamesjefferies.com/2012/07/18/downloading-the-network-rail-schedules</id>
    <content type="html"><![CDATA[<p>As well as the live feeds which you can subscribe to for the Network Rail data, you can also download the Schedule feed which is delivered by Amazon S3. The Schedule feed is an extract of train schedules from the Integration Train Planning System.</p>

<p>When you have your Network Rail account you can subscribe, either to all the data, or to the Train Operators you are interested in. However, at the time of writing, the only feed which works is the one for ALL the data, the Train Operator specific downloads throw an unhelpful error</p>

<blockquote><p>HTTP Status 401 - User not subscribed to CIF_HL_FULL_DAILY</p></blockquote>

<p>Which is a bit rubbish really. So my advice is, at this point to subscribe to ALL the data rather than just for one TOC. You can then access the feeds and download the zip file with either:</p>

<p><a href="https://datafeeds.networkrail.co.uk/ntrod/CifFileAuthenticate?type=CIF_ALL_FULL_DAILY&amp;day=toc-full">https://datafeeds.networkrail.co.uk/ntrod/CifFileAuthenticate?type=CIF_ALL_FULL_DAILY&amp;day=toc-full</a></p>

<p>for the full feed or, say</p>

<p><a href="https://datafeeds.networkrail.co.uk/ntrod/CifFileAuthenticate?type=CIF_ALL_UPDATE_DAILY&amp;day=toc-mon">https://datafeeds.networkrail.co.uk/ntrod/CifFileAuthenticate?type=CIF_ALL_UPDATE_DAILY&amp;day=toc-mon</a></p>

<p>for Monday's update.</p>

<p>Note that you will need to authenticate if you haven't already, using your username and password.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Electrified Spine (and the rest of the news)]]></title>
    <link href="http://jamesjefferies.com/2012/07/16/the-electrified-spine-and-the-rest-of-the-news/"/>
    <updated>2012-07-16T15:39:04+01:00</updated>
    <id>http://jamesjefferies.com/2012/07/16/the-electrified-spine-and-the-rest-of-the-news</id>
    <content type="html"><![CDATA[<p>Today the government has announced a further set of infrastructure investment for the railways. This has to be good news, especially where electrification is concerned. Electric trains are more efficient, cleaner and perform better than their diesel (and steam I suppose!) counterparts. I appreciate that the electricity still has to come from somewhere, but in the main it is the right thing to do.</p>

<h2>Already Announced</h2>

<p>We know that plans to electrify the Great Western Mainline (Paddington to Cardiff, Bristol, Oxford &amp; Newbury), plus the Trans-Pennine route between Manchester &amp; York, Blackpool and Manchester to Liverpool are already underway. These are all good things, but there were some unsatisfactory omissions. The new announcement helps with some of the missing links, but not all of them.</p>

<p>There is a helpful <a href="http://assets.dft.gov.uk/publications/hlos-2012/map-hlos-electrification.pdf">map</a> which shows these routes in glorious technicolour</p>

<h2>New Plans - Midland Mainline</h2>

<p>Hooray, the Midland Mainline, which has been electrified to Bedford for many years is to be electrified to Nottingham and Sheffield (via Derby). For those of us who regularly travel to London from Sheffield we should experience a faster service. Not necessarily more trains though, no extra track is to be laid and unless signalling is replaced, you can't fit that many more trains on the track.</p>

<p>As far as I'm aware, there has been no announcement about rolling stock either, the simple solution for East Midlands Trains (assuming they're still running the franchise) will be to get the existing Meridian trains upgraded with an extra coach containing all of the required electrical equipment, plus pantograph for current collection etc. Easier said than done, but a lot cheaper than brand new trains. So it is likely you'll still be sitting on the same seat.</p>

<h2>Missed Opportunities - Midland Mainline</h2>

<h3>Erewash Valley</h3>

<p>Why or why isn't the Erewash valley route included as part of the plans? This is the line which goes straight on at the junction for Derby and Nottingham, joining up with the Sheffield line between Clay Cross and Chesterfield - it's the most direct route to Sheffield and is useful when engineering works close the route via Derby. Very few London bound trains use this route, most are routed via Derby from Sheffield, but electrifying it would be useful for diversions and could give the opportunity for Sheffield, Leicester, London services which don't call at Derby, potentially shaving more time off the journey.</p>

<h3>Sheffield to Leeds</h3>

<p>Groan, everybody wants a better service between Leeds and Sheffield, the best being the 45 minute Cross Country packed like a sardine train which goes via Wakefield. Why not electrify that route too so that more London trains can be extended easily to Leeds? Plus get some more electrified suburban stoppers on that route. Derby to Leeds semi-fast?</p>

<h3>Sheffield to Doncaster</h3>

<p>Whilst we're at it, how about the link to Doncaster too, providing more opportunities for diversions and commuter services?</p>

<h2>New Plans - Oxford to Corby &amp; Nuneaton</h2>

<p>This wasn't on my radar at all, but makes a lot of sense for new cross country routes as well as faster Birmingham to London trains via Oxford. Incorporating the start of the Oxford to Cambridge route (as far as Bedford) makes sense with that re-opening. The potential for new routes, well re-establishing old routes should give that part of the country a much better service.</p>

<h2>New Plans - Reading to Southampton</h2>

<p>Cross country trains mainly use this route at the moment and it is partially already electrified using the Southern standard 3rd Rail system. Over the next... err.. 50 years (?) the 3rd rail system will be phased out and replaced with the standard 25kv AC overhead system. This is the beginning of that process and also good preparation for Cross Country. Birmingham to Southampton trains will be electric all the way, as might, say Sheffield to Southampton trains, routed via Oxford.</p>

<h2>The Spine</h2>

<p>According to the plan, the Electrified Spine is to be the Southampton to Coventry and Sheffield routes and is a piece of spin. If I had a spine looking like that I'd be worried! The only new route, as far as I can see is the already announced re-opening of the Oxford to Bedford route, everywhere else is straightforward electrification.</p>

<h2>Summary</h2>

<p>I'm very happy to see these extra plans announced, but would like to understand more about why some very obvious links and connections have been omitted. What to others think?</p>
]]></content>
  </entry>
  
</feed>
